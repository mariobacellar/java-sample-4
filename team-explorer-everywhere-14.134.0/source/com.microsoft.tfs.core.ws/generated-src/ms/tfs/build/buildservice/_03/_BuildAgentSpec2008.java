// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See License.txt in the repository root.

 /*
 * This file was automatically generated by com.microsoft.tfs.core.ws.generator.Generator
 * from the /complexType.vm template.
 */
package ms.tfs.build.buildservice._03;

import com.microsoft.tfs.core.ws.runtime.*;
import com.microsoft.tfs.core.ws.runtime.serialization.*;
import com.microsoft.tfs.core.ws.runtime.types.*;
import com.microsoft.tfs.core.ws.runtime.util.*;
import com.microsoft.tfs.core.ws.runtime.xml.*;

import ms.tfs.build.buildservice._03._BuildAgentSpec2008;

import java.lang.String;

import java.util.ArrayList;
import java.util.List;

import javax.xml.stream.XMLStreamConstants;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.XMLStreamWriter;

/**
 * Automatically generated complex type class.
 */
public class _BuildAgentSpec2008
    extends _BuildGroupItemSpec
    implements ElementSerializable, ElementDeserializable
{
    // Attributes
    protected String machineName;
    protected int port;

    // No elements    
    public _BuildAgentSpec2008()
    {
        super();
    }

    public _BuildAgentSpec2008(
        final String fullPath,
        final String machineName,
        final int port)
    {
        // TODO : Call super() instead of setting all fields directly?
        setFullPath(fullPath);
        setMachineName(machineName);
        setPort(port);
    }

    public String getMachineName()
    {
        return this.machineName;
    }

    public void setMachineName(final String value)
    {
        this.machineName = value;
    }

    public int getPort()
    {
        return this.port;
    }

    public void setPort(final int value)
    {
        this.port = value;
    }

    public void writeAsElement(
        final XMLStreamWriter writer,
        final String name)
        throws XMLStreamException
    {
        writer.writeStartElement(name);

        // Declare our type
        writer.writeAttribute(
            "xsi",
            "http://www.w3.org/2001/XMLSchema-instance",
            "type",
            "BuildAgentSpec");

        // Attributes
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "FullPath",
            this.fullPath);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "MachineName",
            this.machineName);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "Port",
            this.port);

        writer.writeEndElement();
    }

    public void readFromElement(final XMLStreamReader reader)
        throws XMLStreamException
    {
        String localName;

        // Attributes
        final int attributeCount = reader.getAttributeCount();
        String attributeValue;

        for (int i = 0; i < attributeCount; i++)
        {
            localName = reader.getAttributeLocalName(i);
            attributeValue = reader.getAttributeValue(i);

            if (localName.equalsIgnoreCase("FullPath"))
            {
                this.fullPath = attributeValue;
            }
            else if (localName.equalsIgnoreCase("MachineName"))
            {
                this.machineName = attributeValue;
            }
            else if (localName.equalsIgnoreCase("Port"))
            {
                this.port = XMLConvert.toInt(attributeValue);
            }

            // Ignore unknown attributes.
        }

        // This object uses no elements, so read until our element end
        XMLStreamReaderHelper.readUntilElementEnd(reader);
    }
}
