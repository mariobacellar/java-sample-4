// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See License.txt in the repository root.

 /*
 * This file was automatically generated by com.microsoft.tfs.core.ws.generator.Generator
 * from the /serviceImplementation.vm template.
 */
package ms.tfs.build.buildservice._04;

import com.microsoft.tfs.core.httpclient.HttpClient;
import com.microsoft.tfs.core.ws.runtime.client.*;
import com.microsoft.tfs.core.ws.runtime.exceptions.*;
import com.microsoft.tfs.core.ws.runtime.serialization.*;
import com.microsoft.tfs.core.ws.runtime.types.*;

import ms.tfs.build.buildservice._04._AgentStatus;
import ms.tfs.build.buildservice._04._BuildAgent;
import ms.tfs.build.buildservice._04._BuildController;
import ms.tfs.build.buildservice._04._BuildDefinition;
import ms.tfs.build.buildservice._04._BuildDefinitionQueryResult;
import ms.tfs.build.buildservice._04._BuildDefinitionSourceProvider;
import ms.tfs.build.buildservice._04._BuildDefinitionSpec;
import ms.tfs.build.buildservice._04._BuildDeletionResult;
import ms.tfs.build.buildservice._04._BuildDetail;
import ms.tfs.build.buildservice._04._BuildDetailSpec;
import ms.tfs.build.buildservice._04._BuildInformationNode;
import ms.tfs.build.buildservice._04._BuildPhaseStatus;
import ms.tfs.build.buildservice._04._BuildQueryOrder;
import ms.tfs.build.buildservice._04._BuildQueryResult;
import ms.tfs.build.buildservice._04._BuildReason;
import ms.tfs.build.buildservice._04._BuildServiceHost;
import ms.tfs.build.buildservice._04._BuildServiceSoap_AddBuildDefinitions;
import ms.tfs.build.buildservice._04._BuildServiceSoap_AddBuildDefinitionsResponse;
import ms.tfs.build.buildservice._04._BuildServiceSoap_AddBuildQualities;
import ms.tfs.build.buildservice._04._BuildServiceSoap_AddBuildQualitiesResponse;
import ms.tfs.build.buildservice._04._BuildServiceSoap_AddProcessTemplates;
import ms.tfs.build.buildservice._04._BuildServiceSoap_AddProcessTemplatesResponse;
import ms.tfs.build.buildservice._04._BuildServiceSoap_CreateTeamProjectComponents;
import ms.tfs.build.buildservice._04._BuildServiceSoap_CreateTeamProjectComponentsResponse;
import ms.tfs.build.buildservice._04._BuildServiceSoap_DeleteBuildDefinitions;
import ms.tfs.build.buildservice._04._BuildServiceSoap_DeleteBuildDefinitionsResponse;
import ms.tfs.build.buildservice._04._BuildServiceSoap_DeleteBuildQualities;
import ms.tfs.build.buildservice._04._BuildServiceSoap_DeleteBuildQualitiesResponse;
import ms.tfs.build.buildservice._04._BuildServiceSoap_DeleteBuilds;
import ms.tfs.build.buildservice._04._BuildServiceSoap_DeleteBuildsResponse;
import ms.tfs.build.buildservice._04._BuildServiceSoap_DeleteProcessTemplates;
import ms.tfs.build.buildservice._04._BuildServiceSoap_DeleteProcessTemplatesResponse;
import ms.tfs.build.buildservice._04._BuildServiceSoap_DestroyBuilds;
import ms.tfs.build.buildservice._04._BuildServiceSoap_DestroyBuildsResponse;
import ms.tfs.build.buildservice._04._BuildServiceSoap_GetAffectedBuildDefinitions;
import ms.tfs.build.buildservice._04._BuildServiceSoap_GetAffectedBuildDefinitionsResponse;
import ms.tfs.build.buildservice._04._BuildServiceSoap_GetBuildQualities;
import ms.tfs.build.buildservice._04._BuildServiceSoap_GetBuildQualitiesResponse;
import ms.tfs.build.buildservice._04._BuildServiceSoap_NotifyBuildCompleted;
import ms.tfs.build.buildservice._04._BuildServiceSoap_NotifyBuildCompletedResponse;
import ms.tfs.build.buildservice._04._BuildServiceSoap_QueryBuildDefinitions;
import ms.tfs.build.buildservice._04._BuildServiceSoap_QueryBuildDefinitionsByUri;
import ms.tfs.build.buildservice._04._BuildServiceSoap_QueryBuildDefinitionsByUriResponse;
import ms.tfs.build.buildservice._04._BuildServiceSoap_QueryBuildDefinitionsResponse;
import ms.tfs.build.buildservice._04._BuildServiceSoap_QueryBuilds;
import ms.tfs.build.buildservice._04._BuildServiceSoap_QueryBuildsByUri;
import ms.tfs.build.buildservice._04._BuildServiceSoap_QueryBuildsByUriResponse;
import ms.tfs.build.buildservice._04._BuildServiceSoap_QueryBuildsResponse;
import ms.tfs.build.buildservice._04._BuildServiceSoap_QueryProcessTemplates;
import ms.tfs.build.buildservice._04._BuildServiceSoap_QueryProcessTemplatesResponse;
import ms.tfs.build.buildservice._04._BuildServiceSoap_RequestIntermediateLogs;
import ms.tfs.build.buildservice._04._BuildServiceSoap_RequestIntermediateLogsResponse;
import ms.tfs.build.buildservice._04._BuildServiceSoap_StopBuilds;
import ms.tfs.build.buildservice._04._BuildServiceSoap_StopBuildsResponse;
import ms.tfs.build.buildservice._04._BuildServiceSoap_UpdateBuildDefinitions;
import ms.tfs.build.buildservice._04._BuildServiceSoap_UpdateBuildDefinitionsResponse;
import ms.tfs.build.buildservice._04._BuildServiceSoap_UpdateBuildInformation;
import ms.tfs.build.buildservice._04._BuildServiceSoap_UpdateBuildInformationResponse;
import ms.tfs.build.buildservice._04._BuildServiceSoap_UpdateBuilds;
import ms.tfs.build.buildservice._04._BuildServiceSoap_UpdateBuildsResponse;
import ms.tfs.build.buildservice._04._BuildServiceSoap_UpdateProcessTemplates;
import ms.tfs.build.buildservice._04._BuildServiceSoap_UpdateProcessTemplatesResponse;
import ms.tfs.build.buildservice._04._BuildStatus;
import ms.tfs.build.buildservice._04._BuildTeamProjectPermission;
import ms.tfs.build.buildservice._04._BuildUpdate;
import ms.tfs.build.buildservice._04._BuildUpdateOptions;
import ms.tfs.build.buildservice._04._ControllerStatus;
import ms.tfs.build.buildservice._04._DefinitionQueueStatus;
import ms.tfs.build.buildservice._04._DefinitionTriggerType;
import ms.tfs.build.buildservice._04._DeleteOptions;
import ms.tfs.build.buildservice._04._Failure;
import ms.tfs.build.buildservice._04._GetOption;
import ms.tfs.build.buildservice._04._InformationChangeRequest;
import ms.tfs.build.buildservice._04._InformationField;
import ms.tfs.build.buildservice._04._NameValueField;
import ms.tfs.build.buildservice._04._ProcessTemplate;
import ms.tfs.build.buildservice._04._ProcessTemplateType;
import ms.tfs.build.buildservice._04._PropertyValue;
import ms.tfs.build.buildservice._04._QueryDeletedOption;
import ms.tfs.build.buildservice._04._QueryOptions;
import ms.tfs.build.buildservice._04._QueuePriority;
import ms.tfs.build.buildservice._04._QueueStatus;
import ms.tfs.build.buildservice._04._QueuedBuild;
import ms.tfs.build.buildservice._04._RetentionPolicy;
import ms.tfs.build.buildservice._04._Schedule;
import ms.tfs.build.buildservice._04._ScheduleDays;
import ms.tfs.build.buildservice._04._ServiceHostStatus;
import ms.tfs.build.buildservice._04._WorkspaceMapping;
import ms.tfs.build.buildservice._04._WorkspaceMappingType;
import ms.tfs.build.buildservice._04._WorkspaceTemplate;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

import java.lang.Object;
import java.lang.String;

import java.net.URI;

import java.util.Calendar;

import javax.xml.namespace.QName;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.XMLStreamWriter;

/**
 * Automatically generated service interface.
 *
 * {http://schemas.microsoft.com/TeamFoundation/2010/Build}BuildServiceSoapService
 */
public class _BuildServiceSoapService
    extends SOAP11Service
    implements _BuildServiceSoap
{
    private static final QName PORT_QNAME = new QName("http://schemas.microsoft.com/TeamFoundation/2010/Build",
            "BuildServiceSoapService");
    private static final String ENDPOINT_PATH = "/tfs/DefaultCollection/Build/v4.0/BuildService.asmx";

    public _BuildServiceSoapService(
        final URI endpoint,
        final QName port)
    {
        super(endpoint, port);
    }

    public _BuildServiceSoapService(
        final HttpClient client,
        URI endpoint,
        QName port)
    {
        super(client, endpoint, port);
    }

    /**
     * @return the qualified name of the WSDL port this service implementation can be used with
     */
    public static QName getPortQName()
    {
        return _BuildServiceSoapService.PORT_QNAME;
    }

    /**
     * @return the path part to use when constructing a URI to contact a host that provides this service
     */
    public static String getEndpointPath()
    {
        return _BuildServiceSoapService.ENDPOINT_PATH;
    }

    public _BuildDefinition[] addBuildDefinitions(final _BuildDefinition[] definitions)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_AddBuildDefinitions requestData = new _BuildServiceSoap_AddBuildDefinitions(definitions);

        final SOAPRequest request = createSOAPRequest(
                "AddBuildDefinitions",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "AddBuildDefinitions");
                    }
                });

        final _BuildServiceSoap_AddBuildDefinitionsResponse responseData = new _BuildServiceSoap_AddBuildDefinitionsResponse();

        executeSOAPRequest(
            request,
            "AddBuildDefinitionsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getAddBuildDefinitionsResult();
    }

    public void addBuildQualities(
        final String teamProject,
        final String[] qualities)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_AddBuildQualities requestData = new _BuildServiceSoap_AddBuildQualities(teamProject,
                qualities);

        final SOAPRequest request = createSOAPRequest(
                "AddBuildQualities",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "AddBuildQualities");
                    }
                });

        final _BuildServiceSoap_AddBuildQualitiesResponse responseData = new _BuildServiceSoap_AddBuildQualitiesResponse();

        executeSOAPRequest(
            request,
            "AddBuildQualitiesResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }

    public _ProcessTemplate[] addProcessTemplates(final _ProcessTemplate[] processTemplates)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_AddProcessTemplates requestData = new _BuildServiceSoap_AddProcessTemplates(
                    processTemplates);

        final SOAPRequest request = createSOAPRequest(
                "AddProcessTemplates",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "AddProcessTemplates");
                    }
                });

        final _BuildServiceSoap_AddProcessTemplatesResponse responseData = new _BuildServiceSoap_AddProcessTemplatesResponse();

        executeSOAPRequest(
            request,
            "AddProcessTemplatesResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getAddProcessTemplatesResult();
    }

    public void deleteBuildDefinitions(final String[] uris)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_DeleteBuildDefinitions requestData = new _BuildServiceSoap_DeleteBuildDefinitions(uris);

        final SOAPRequest request = createSOAPRequest(
                "DeleteBuildDefinitions",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "DeleteBuildDefinitions");
                    }
                });

        final _BuildServiceSoap_DeleteBuildDefinitionsResponse responseData = new _BuildServiceSoap_DeleteBuildDefinitionsResponse();

        executeSOAPRequest(
            request,
            "DeleteBuildDefinitionsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }

    public void deleteBuildQualities(
        final String teamProject,
        final String[] qualities)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_DeleteBuildQualities requestData = new _BuildServiceSoap_DeleteBuildQualities(teamProject,
                qualities);

        final SOAPRequest request = createSOAPRequest(
                "DeleteBuildQualities",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "DeleteBuildQualities");
                    }
                });

        final _BuildServiceSoap_DeleteBuildQualitiesResponse responseData = new _BuildServiceSoap_DeleteBuildQualitiesResponse();

        executeSOAPRequest(
            request,
            "DeleteBuildQualitiesResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }

    public _BuildDeletionResult[] deleteBuilds(
        final String[] uris,
        final _DeleteOptions deleteOptions)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_DeleteBuilds requestData = new _BuildServiceSoap_DeleteBuilds(uris, deleteOptions);

        final SOAPRequest request = createSOAPRequest(
                "DeleteBuilds",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "DeleteBuilds");
                    }
                });

        final _BuildServiceSoap_DeleteBuildsResponse responseData = new _BuildServiceSoap_DeleteBuildsResponse();

        executeSOAPRequest(
            request,
            "DeleteBuildsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getDeleteBuildsResult();
    }

    public void destroyBuilds(final String[] uris)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_DestroyBuilds requestData = new _BuildServiceSoap_DestroyBuilds(uris);

        final SOAPRequest request = createSOAPRequest(
                "DestroyBuilds",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "DestroyBuilds");
                    }
                });

        final _BuildServiceSoap_DestroyBuildsResponse responseData = new _BuildServiceSoap_DestroyBuildsResponse();

        executeSOAPRequest(
            request,
            "DestroyBuildsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }

    public void deleteProcessTemplates(final int[] processTemplateIds)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_DeleteProcessTemplates requestData = new _BuildServiceSoap_DeleteProcessTemplates(
                    processTemplateIds);

        final SOAPRequest request = createSOAPRequest(
                "DeleteProcessTemplates",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "DeleteProcessTemplates");
                    }
                });

        final _BuildServiceSoap_DeleteProcessTemplatesResponse responseData = new _BuildServiceSoap_DeleteProcessTemplatesResponse();

        executeSOAPRequest(
            request,
            "DeleteProcessTemplatesResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }

    public _BuildDefinition[] getAffectedBuildDefinitions(
        final String[] serverItems,
        final _DefinitionTriggerType continuousIntegrationType)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_GetAffectedBuildDefinitions requestData = new _BuildServiceSoap_GetAffectedBuildDefinitions(
                    serverItems,
                    continuousIntegrationType);

        final SOAPRequest request = createSOAPRequest(
                "GetAffectedBuildDefinitions",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetAffectedBuildDefinitions");
                    }
                });

        final _BuildServiceSoap_GetAffectedBuildDefinitionsResponse responseData = new _BuildServiceSoap_GetAffectedBuildDefinitionsResponse();

        executeSOAPRequest(
            request,
            "GetAffectedBuildDefinitionsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getGetAffectedBuildDefinitionsResult();
    }

    public String[] getBuildQualities(final String teamProject)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_GetBuildQualities requestData = new _BuildServiceSoap_GetBuildQualities(teamProject);

        final SOAPRequest request = createSOAPRequest(
                "GetBuildQualities",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetBuildQualities");
                    }
                });

        final _BuildServiceSoap_GetBuildQualitiesResponse responseData = new _BuildServiceSoap_GetBuildQualitiesResponse();

        executeSOAPRequest(
            request,
            "GetBuildQualitiesResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getGetBuildQualitiesResult();
    }

    public _ProcessTemplate[] queryProcessTemplates(
        final String teamProject,
        final _ProcessTemplateType[] queryTypes)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_QueryProcessTemplates requestData = new _BuildServiceSoap_QueryProcessTemplates(
                    teamProject,
                    queryTypes);

        final SOAPRequest request = createSOAPRequest(
                "QueryProcessTemplates",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "QueryProcessTemplates");
                    }
                });

        final _BuildServiceSoap_QueryProcessTemplatesResponse responseData = new _BuildServiceSoap_QueryProcessTemplatesResponse();

        executeSOAPRequest(
            request,
            "QueryProcessTemplatesResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getQueryProcessTemplatesResult();
    }

    public _BuildDetail notifyBuildCompleted(final String buildUri)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_NotifyBuildCompleted requestData = new _BuildServiceSoap_NotifyBuildCompleted(buildUri);

        final SOAPRequest request = createSOAPRequest(
                "NotifyBuildCompleted",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "NotifyBuildCompleted");
                    }
                });

        final _BuildServiceSoap_NotifyBuildCompletedResponse responseData = new _BuildServiceSoap_NotifyBuildCompletedResponse();

        executeSOAPRequest(
            request,
            "NotifyBuildCompletedResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getNotifyBuildCompletedResult();
    }

    public String requestIntermediateLogs(final String buildUri)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_RequestIntermediateLogs requestData = new _BuildServiceSoap_RequestIntermediateLogs(
                    buildUri);

        final SOAPRequest request = createSOAPRequest(
                "RequestIntermediateLogs",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "RequestIntermediateLogs");
                    }
                });

        final _BuildServiceSoap_RequestIntermediateLogsResponse responseData = new _BuildServiceSoap_RequestIntermediateLogsResponse();

        executeSOAPRequest(
            request,
            "RequestIntermediateLogsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getRequestIntermediateLogsResult();
    }

    public _BuildDefinitionQueryResult[] queryBuildDefinitions(
        final _BuildDefinitionSpec[] specs,
        final boolean strict)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_QueryBuildDefinitions requestData = new _BuildServiceSoap_QueryBuildDefinitions(specs,
                strict);

        final SOAPRequest request = createSOAPRequest(
                "QueryBuildDefinitions",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "QueryBuildDefinitions");
                    }
                });

        final _BuildServiceSoap_QueryBuildDefinitionsResponse responseData = new _BuildServiceSoap_QueryBuildDefinitionsResponse();

        executeSOAPRequest(
            request,
            "QueryBuildDefinitionsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getQueryBuildDefinitionsResult();
    }

    public _BuildDefinitionQueryResult queryBuildDefinitionsByUri(
        final String[] uris,
        final String[] propertyNameFilters,
        final _QueryOptions options)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_QueryBuildDefinitionsByUri requestData = new _BuildServiceSoap_QueryBuildDefinitionsByUri(
                    uris,
                    propertyNameFilters,
                    options);

        final SOAPRequest request = createSOAPRequest(
                "QueryBuildDefinitionsByUri",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "QueryBuildDefinitionsByUri");
                    }
                });

        final _BuildServiceSoap_QueryBuildDefinitionsByUriResponse responseData = new _BuildServiceSoap_QueryBuildDefinitionsByUriResponse();

        executeSOAPRequest(
            request,
            "QueryBuildDefinitionsByUriResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getQueryBuildDefinitionsByUriResult();
    }

    public _BuildQueryResult[] queryBuilds(final _BuildDetailSpec[] specs)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_QueryBuilds requestData = new _BuildServiceSoap_QueryBuilds(specs);

        final SOAPRequest request = createSOAPRequest(
                "QueryBuilds",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "QueryBuilds");
                    }
                });

        final _BuildServiceSoap_QueryBuildsResponse responseData = new _BuildServiceSoap_QueryBuildsResponse();

        executeSOAPRequest(
            request,
            "QueryBuildsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getQueryBuildsResult();
    }

    public _BuildQueryResult queryBuildsByUri(
        final String[] uris,
        final String[] informationTypes,
        final _QueryOptions options,
        final _QueryDeletedOption deletedOption)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_QueryBuildsByUri requestData = new _BuildServiceSoap_QueryBuildsByUri(uris,
                informationTypes, options, deletedOption);

        final SOAPRequest request = createSOAPRequest(
                "QueryBuildsByUri",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "QueryBuildsByUri");
                    }
                });

        final _BuildServiceSoap_QueryBuildsByUriResponse responseData = new _BuildServiceSoap_QueryBuildsByUriResponse();

        executeSOAPRequest(
            request,
            "QueryBuildsByUriResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getQueryBuildsByUriResult();
    }

    public void stopBuilds(final String[] uris)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_StopBuilds requestData = new _BuildServiceSoap_StopBuilds(uris);

        final SOAPRequest request = createSOAPRequest(
                "StopBuilds",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "StopBuilds");
                    }
                });

        final _BuildServiceSoap_StopBuildsResponse responseData = new _BuildServiceSoap_StopBuildsResponse();

        executeSOAPRequest(
            request,
            "StopBuildsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }

    public _BuildDefinition[] updateBuildDefinitions(final _BuildDefinition[] updates)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_UpdateBuildDefinitions requestData = new _BuildServiceSoap_UpdateBuildDefinitions(updates);

        final SOAPRequest request = createSOAPRequest(
                "UpdateBuildDefinitions",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "UpdateBuildDefinitions");
                    }
                });

        final _BuildServiceSoap_UpdateBuildDefinitionsResponse responseData = new _BuildServiceSoap_UpdateBuildDefinitionsResponse();

        executeSOAPRequest(
            request,
            "UpdateBuildDefinitionsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getUpdateBuildDefinitionsResult();
    }

    public _BuildInformationNode[] updateBuildInformation(final _InformationChangeRequest[] changes)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_UpdateBuildInformation requestData = new _BuildServiceSoap_UpdateBuildInformation(changes);

        final SOAPRequest request = createSOAPRequest(
                "UpdateBuildInformation",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "UpdateBuildInformation");
                    }
                });

        final _BuildServiceSoap_UpdateBuildInformationResponse responseData = new _BuildServiceSoap_UpdateBuildInformationResponse();

        executeSOAPRequest(
            request,
            "UpdateBuildInformationResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getUpdateBuildInformationResult();
    }

    public _BuildDetail[] updateBuilds(final _BuildUpdateOptions[] updateOptions)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_UpdateBuilds requestData = new _BuildServiceSoap_UpdateBuilds(updateOptions);

        final SOAPRequest request = createSOAPRequest(
                "UpdateBuilds",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "UpdateBuilds");
                    }
                });

        final _BuildServiceSoap_UpdateBuildsResponse responseData = new _BuildServiceSoap_UpdateBuildsResponse();

        executeSOAPRequest(
            request,
            "UpdateBuildsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getUpdateBuildsResult();
    }

    public _ProcessTemplate[] updateProcessTemplates(final _ProcessTemplate[] processTemplates)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_UpdateProcessTemplates requestData = new _BuildServiceSoap_UpdateProcessTemplates(
                    processTemplates);

        final SOAPRequest request = createSOAPRequest(
                "UpdateProcessTemplates",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "UpdateProcessTemplates");
                    }
                });

        final _BuildServiceSoap_UpdateProcessTemplatesResponse responseData = new _BuildServiceSoap_UpdateProcessTemplatesResponse();

        executeSOAPRequest(
            request,
            "UpdateProcessTemplatesResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getUpdateProcessTemplatesResult();
    }

    public void createTeamProjectComponents(
        final String projectUri,
        final _BuildTeamProjectPermission[] permissions)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_CreateTeamProjectComponents requestData = new _BuildServiceSoap_CreateTeamProjectComponents(
                    projectUri,
                    permissions);

        final SOAPRequest request = createSOAPRequest(
                "CreateTeamProjectComponents",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "CreateTeamProjectComponents");
                    }
                });

        final _BuildServiceSoap_CreateTeamProjectComponentsResponse responseData = new _BuildServiceSoap_CreateTeamProjectComponentsResponse();

        executeSOAPRequest(
            request,
            "CreateTeamProjectComponentsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }
}
