// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See License.txt in the repository root.

 /*
 * This file was automatically generated by com.microsoft.tfs.core.ws.generator.Generator
 * from the /complexType.vm template.
 */
package ms.tfs.versioncontrol.clientservices._03;

import com.microsoft.tfs.core.ws.runtime.*;
import com.microsoft.tfs.core.ws.runtime.serialization.*;
import com.microsoft.tfs.core.ws.runtime.types.*;
import com.microsoft.tfs.core.ws.runtime.util.*;
import com.microsoft.tfs.core.ws.runtime.xml.*;

import ms.tfs.versioncontrol.clientservices._03._CheckinNoteFieldDefinition;

import java.lang.String;

import java.util.ArrayList;
import java.util.List;

import javax.xml.stream.XMLStreamConstants;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.XMLStreamWriter;

/**
 * Automatically generated complex type class.
 */
public class _CheckinNoteFieldDefinition
    implements ElementSerializable, ElementDeserializable
{
    // Attributes
    protected String ai;
    protected String name;
    protected boolean req = false;
    protected int _do = 0;

    // No elements    
    public _CheckinNoteFieldDefinition()
    {
        super();
    }

    public _CheckinNoteFieldDefinition(
        final String ai,
        final String name,
        final boolean req,
        final int _do)
    {
        // TODO : Call super() instead of setting all fields directly?
        setAi(ai);
        setName(name);
        setReq(req);
        set_do(_do);
    }

    public String getAi()
    {
        return this.ai;
    }

    public void setAi(final String value)
    {
        this.ai = value;
    }

    public String getName()
    {
        return this.name;
    }

    public void setName(final String value)
    {
        this.name = value;
    }

    public boolean isReq()
    {
        return this.req;
    }

    public void setReq(final boolean value)
    {
        this.req = value;
    }

    public int get_do()
    {
        return this._do;
    }

    public void set_do(final int value)
    {
        this._do = value;
    }

    public void writeAsElement(
        final XMLStreamWriter writer,
        final String name)
        throws XMLStreamException
    {
        writer.writeStartElement(name);

        // Attributes
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "ai",
            this.ai);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "name",
            this.name);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "req",
            this.req);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "do",
            this._do);

        writer.writeEndElement();
    }

    public void readFromElement(final XMLStreamReader reader)
        throws XMLStreamException
    {
        String localName;

        // Attributes
        final int attributeCount = reader.getAttributeCount();
        String attributeValue;

        for (int i = 0; i < attributeCount; i++)
        {
            localName = reader.getAttributeLocalName(i);
            attributeValue = reader.getAttributeValue(i);

            if (localName.equalsIgnoreCase("ai"))
            {
                this.ai = attributeValue;
            }
            else if (localName.equalsIgnoreCase("name"))
            {
                this.name = attributeValue;
            }
            else if (localName.equalsIgnoreCase("req"))
            {
                this.req = XMLConvert.toBoolean(attributeValue);
            }
            else if (localName.equalsIgnoreCase("do"))
            {
                this._do = XMLConvert.toInt(attributeValue);
            }

            // Ignore unknown attributes.
        }

        // This object uses no elements, so read until our element end
        XMLStreamReaderHelper.readUntilElementEnd(reader);
    }
}
