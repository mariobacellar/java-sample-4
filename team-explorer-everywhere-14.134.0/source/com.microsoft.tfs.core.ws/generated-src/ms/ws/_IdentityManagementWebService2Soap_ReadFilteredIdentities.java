// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See License.txt in the repository root.

 /*
 * This file was automatically generated by com.microsoft.tfs.core.ws.generator.Generator
 * from the /complexType.vm template.
 */
package ms.ws;

import com.microsoft.tfs.core.ws.runtime.*;
import com.microsoft.tfs.core.ws.runtime.serialization.*;
import com.microsoft.tfs.core.ws.runtime.types.*;
import com.microsoft.tfs.core.ws.runtime.util.*;
import com.microsoft.tfs.core.ws.runtime.xml.*;

import ms.ws._IdentityManagementWebService2Soap_ReadFilteredIdentities;

import java.lang.String;

import java.util.ArrayList;
import java.util.List;

import javax.xml.stream.XMLStreamConstants;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.XMLStreamWriter;

/**
 * Automatically generated complex type class.
 */
public class _IdentityManagementWebService2Soap_ReadFilteredIdentities
    implements ElementSerializable
{
    // No attributes    

    // Elements
    protected String expression;
    protected int suggestedPageSize;
    protected String lastSearchResult;
    protected boolean lookForward;
    protected int queryMembership;
    protected int features;

    public _IdentityManagementWebService2Soap_ReadFilteredIdentities()
    {
        super();
    }

    public _IdentityManagementWebService2Soap_ReadFilteredIdentities(
        final String expression,
        final int suggestedPageSize,
        final String lastSearchResult,
        final boolean lookForward,
        final int queryMembership,
        final int features)
    {
        // TODO : Call super() instead of setting all fields directly?
        setExpression(expression);
        setSuggestedPageSize(suggestedPageSize);
        setLastSearchResult(lastSearchResult);
        setLookForward(lookForward);
        setQueryMembership(queryMembership);
        setFeatures(features);
    }

    public String getExpression()
    {
        return this.expression;
    }

    public void setExpression(String value)
    {
        this.expression = value;
    }

    public int getSuggestedPageSize()
    {
        return this.suggestedPageSize;
    }

    public void setSuggestedPageSize(int value)
    {
        this.suggestedPageSize = value;
    }

    public String getLastSearchResult()
    {
        return this.lastSearchResult;
    }

    public void setLastSearchResult(String value)
    {
        this.lastSearchResult = value;
    }

    public boolean isLookForward()
    {
        return this.lookForward;
    }

    public void setLookForward(boolean value)
    {
        this.lookForward = value;
    }

    public int getQueryMembership()
    {
        return this.queryMembership;
    }

    public void setQueryMembership(int value)
    {
        this.queryMembership = value;
    }

    public int getFeatures()
    {
        return this.features;
    }

    public void setFeatures(int value)
    {
        this.features = value;
    }

    public void writeAsElement(
        final XMLStreamWriter writer,
        final String name)
        throws XMLStreamException
    {
        writer.writeStartElement(name);

        // Elements
        XMLStreamWriterHelper.writeElement(
            writer,
            "expression",
            this.expression);
        XMLStreamWriterHelper.writeElement(
            writer,
            "suggestedPageSize",
            this.suggestedPageSize);
        XMLStreamWriterHelper.writeElement(
            writer,
            "lastSearchResult",
            this.lastSearchResult);
        XMLStreamWriterHelper.writeElement(
            writer,
            "lookForward",
            this.lookForward);
        XMLStreamWriterHelper.writeElement(
            writer,
            "queryMembership",
            this.queryMembership);
        XMLStreamWriterHelper.writeElement(
            writer,
            "features",
            this.features);

        writer.writeEndElement();
    }
}
