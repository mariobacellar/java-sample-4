// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See License.txt in the repository root.

 /*
 * This file was automatically generated by com.microsoft.tfs.core.ws.generator.Generator
 * from the /complexType.vm template.
 */
package ms.tfs.versioncontrol.clientservices._03;

import com.microsoft.tfs.core.ws.runtime.*;
import com.microsoft.tfs.core.ws.runtime.serialization.*;
import com.microsoft.tfs.core.ws.runtime.types.*;
import com.microsoft.tfs.core.ws.runtime.util.*;
import com.microsoft.tfs.core.ws.runtime.xml.*;

import ms.tfs.versioncontrol.clientservices._03._ItemIdentifier;
import ms.tfs.versioncontrol.clientservices._03._RecursionType;
import ms.tfs.versioncontrol.clientservices._03._Repository5Soap_QueryBranchObjects;
import ms.tfs.versioncontrol.clientservices._03._VersionSpec;

import java.lang.String;

import java.util.ArrayList;
import java.util.List;

import javax.xml.stream.XMLStreamConstants;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.XMLStreamWriter;

/**
 * Automatically generated complex type class.
 */
public class _Repository5Soap_QueryBranchObjects
    implements ElementSerializable
{
    // No attributes    

    // Elements
    protected _ItemIdentifier item;
    protected _RecursionType recursion;
    protected int maxClientPathLength;

    public _Repository5Soap_QueryBranchObjects()
    {
        super();
    }

    public _Repository5Soap_QueryBranchObjects(
        final _ItemIdentifier item,
        final _RecursionType recursion,
        final int maxClientPathLength)
    {
        // TODO : Call super() instead of setting all fields directly?
        setItem(item);
        setRecursion(recursion);
        setMaxClientPathLength(maxClientPathLength);
    }

    public _ItemIdentifier getItem()
    {
        return this.item;
    }

    public void setItem(_ItemIdentifier value)
    {
        this.item = value;
    }

    public _RecursionType getRecursion()
    {
        return this.recursion;
    }

    public void setRecursion(_RecursionType value)
    {
        if (value == null)
        {
            throw new IllegalArgumentException("'recursion' is a required element, its value cannot be null");
        }

        this.recursion = value;
    }

    public int getMaxClientPathLength()
    {
        return this.maxClientPathLength;
    }

    public void setMaxClientPathLength(int value)
    {
        this.maxClientPathLength = value;
    }

    public void writeAsElement(
        final XMLStreamWriter writer,
        final String name)
        throws XMLStreamException
    {
        writer.writeStartElement(name);

        // Elements
        if (this.item != null)
        {
            this.item.writeAsElement(
                writer,
                "item");
        }

        this.recursion.writeAsElement(
            writer,
            "recursion");
        XMLStreamWriterHelper.writeElement(
            writer,
            "maxClientPathLength",
            this.maxClientPathLength);

        writer.writeEndElement();
    }
}
