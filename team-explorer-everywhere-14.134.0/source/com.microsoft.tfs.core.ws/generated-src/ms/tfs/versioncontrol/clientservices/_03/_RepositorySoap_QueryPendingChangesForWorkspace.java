// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See License.txt in the repository root.

 /*
 * This file was automatically generated by com.microsoft.tfs.core.ws.generator.Generator
 * from the /complexType.vm template.
 */
package ms.tfs.versioncontrol.clientservices._03;

import com.microsoft.tfs.core.ws.runtime.*;
import com.microsoft.tfs.core.ws.runtime.serialization.*;
import com.microsoft.tfs.core.ws.runtime.types.*;
import com.microsoft.tfs.core.ws.runtime.util.*;
import com.microsoft.tfs.core.ws.runtime.xml.*;

import ms.tfs.versioncontrol.clientservices._03._ItemSpec;
import ms.tfs.versioncontrol.clientservices._03._RecursionType;
import ms.tfs.versioncontrol.clientservices._03._RepositorySoap_QueryPendingChangesForWorkspace;

import java.lang.String;

import java.util.ArrayList;
import java.util.List;

import javax.xml.stream.XMLStreamConstants;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.XMLStreamWriter;

/**
 * Automatically generated complex type class.
 */
public class _RepositorySoap_QueryPendingChangesForWorkspace
    implements ElementSerializable
{
    // No attributes    

    // Elements
    protected String workspaceName;
    protected String workspaceOwner;
    protected _ItemSpec[] itemSpecs;
    protected boolean generateDownloadUrls;
    protected int pageSize;
    protected String lastChange;

    public _RepositorySoap_QueryPendingChangesForWorkspace()
    {
        super();
    }

    public _RepositorySoap_QueryPendingChangesForWorkspace(
        final String workspaceName,
        final String workspaceOwner,
        final _ItemSpec[] itemSpecs,
        final boolean generateDownloadUrls,
        final int pageSize,
        final String lastChange)
    {
        // TODO : Call super() instead of setting all fields directly?
        setWorkspaceName(workspaceName);
        setWorkspaceOwner(workspaceOwner);
        setItemSpecs(itemSpecs);
        setGenerateDownloadUrls(generateDownloadUrls);
        setPageSize(pageSize);
        setLastChange(lastChange);
    }

    public String getWorkspaceName()
    {
        return this.workspaceName;
    }

    public void setWorkspaceName(String value)
    {
        this.workspaceName = value;
    }

    public String getWorkspaceOwner()
    {
        return this.workspaceOwner;
    }

    public void setWorkspaceOwner(String value)
    {
        this.workspaceOwner = value;
    }

    public _ItemSpec[] getItemSpecs()
    {
        return this.itemSpecs;
    }

    public void setItemSpecs(_ItemSpec[] value)
    {
        this.itemSpecs = value;
    }

    public boolean isGenerateDownloadUrls()
    {
        return this.generateDownloadUrls;
    }

    public void setGenerateDownloadUrls(boolean value)
    {
        this.generateDownloadUrls = value;
    }

    public int getPageSize()
    {
        return this.pageSize;
    }

    public void setPageSize(int value)
    {
        this.pageSize = value;
    }

    public String getLastChange()
    {
        return this.lastChange;
    }

    public void setLastChange(String value)
    {
        this.lastChange = value;
    }

    public void writeAsElement(
        final XMLStreamWriter writer,
        final String name)
        throws XMLStreamException
    {
        writer.writeStartElement(name);

        // Elements
        XMLStreamWriterHelper.writeElement(
            writer,
            "workspaceName",
            this.workspaceName);
        XMLStreamWriterHelper.writeElement(
            writer,
            "workspaceOwner",
            this.workspaceOwner);

        if (this.itemSpecs != null)
        {
            /*
             * The element type is an array.
             */
            writer.writeStartElement("itemSpecs");

            for (int iterator0 = 0; iterator0 < this.itemSpecs.length; iterator0++)
            {
                this.itemSpecs[iterator0].writeAsElement(
                    writer,
                    "ItemSpec");
            }

            writer.writeEndElement();
        }

        XMLStreamWriterHelper.writeElement(
            writer,
            "generateDownloadUrls",
            this.generateDownloadUrls);
        XMLStreamWriterHelper.writeElement(
            writer,
            "pageSize",
            this.pageSize);
        XMLStreamWriterHelper.writeElement(
            writer,
            "lastChange",
            this.lastChange);

        writer.writeEndElement();
    }
}
