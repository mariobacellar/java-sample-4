// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See License.txt in the repository root.

 /*
 * This file was automatically generated by com.microsoft.tfs.core.ws.generator.Generator
 * from the /serviceImplementation.vm template.
 */
package ms.tfs.build.buildservice._03;

import com.microsoft.tfs.core.httpclient.HttpClient;
import com.microsoft.tfs.core.ws.runtime.client.*;
import com.microsoft.tfs.core.ws.runtime.exceptions.*;
import com.microsoft.tfs.core.ws.runtime.serialization.*;
import com.microsoft.tfs.core.ws.runtime.types.*;

import ms.tfs.build.buildservice._03._Agent2008Status;
import ms.tfs.build.buildservice._03._BuildAgent2008;
import ms.tfs.build.buildservice._03._BuildAgentSpec2008;
import ms.tfs.build.buildservice._03._BuildDefinition;
import ms.tfs.build.buildservice._03._BuildDefinitionSpec;
import ms.tfs.build.buildservice._03._BuildDeletionResult;
import ms.tfs.build.buildservice._03._BuildDetail;
import ms.tfs.build.buildservice._03._BuildDetailSpec;
import ms.tfs.build.buildservice._03._BuildGroupItemSpec;
import ms.tfs.build.buildservice._03._BuildGroupQueryResult;
import ms.tfs.build.buildservice._03._BuildInformationNode;
import ms.tfs.build.buildservice._03._BuildPhaseStatus;
import ms.tfs.build.buildservice._03._BuildQueryOrder;
import ms.tfs.build.buildservice._03._BuildQueryResult2008;
import ms.tfs.build.buildservice._03._BuildQueueQueryResult2008;
import ms.tfs.build.buildservice._03._BuildQueueSpec2008;
import ms.tfs.build.buildservice._03._BuildReason;
import ms.tfs.build.buildservice._03._BuildRequest2008;
import ms.tfs.build.buildservice._03._BuildServiceSoap_AddBuildAgents;
import ms.tfs.build.buildservice._03._BuildServiceSoap_AddBuildAgentsResponse;
import ms.tfs.build.buildservice._03._BuildServiceSoap_AddBuildDefinitions;
import ms.tfs.build.buildservice._03._BuildServiceSoap_AddBuildDefinitionsResponse;
import ms.tfs.build.buildservice._03._BuildServiceSoap_AddBuildQualities;
import ms.tfs.build.buildservice._03._BuildServiceSoap_AddBuildQualitiesResponse;
import ms.tfs.build.buildservice._03._BuildServiceSoap_CancelBuilds;
import ms.tfs.build.buildservice._03._BuildServiceSoap_CancelBuildsResponse;
import ms.tfs.build.buildservice._03._BuildServiceSoap_DeleteBuildAgents;
import ms.tfs.build.buildservice._03._BuildServiceSoap_DeleteBuildAgentsResponse;
import ms.tfs.build.buildservice._03._BuildServiceSoap_DeleteBuildDefinitions;
import ms.tfs.build.buildservice._03._BuildServiceSoap_DeleteBuildDefinitionsResponse;
import ms.tfs.build.buildservice._03._BuildServiceSoap_DeleteBuildQualities;
import ms.tfs.build.buildservice._03._BuildServiceSoap_DeleteBuildQualitiesResponse;
import ms.tfs.build.buildservice._03._BuildServiceSoap_DeleteBuilds;
import ms.tfs.build.buildservice._03._BuildServiceSoap_DeleteBuildsResponse;
import ms.tfs.build.buildservice._03._BuildServiceSoap_EvaluateSchedules;
import ms.tfs.build.buildservice._03._BuildServiceSoap_EvaluateSchedulesResponse;
import ms.tfs.build.buildservice._03._BuildServiceSoap_GetAffectedBuildDefinitions;
import ms.tfs.build.buildservice._03._BuildServiceSoap_GetAffectedBuildDefinitionsResponse;
import ms.tfs.build.buildservice._03._BuildServiceSoap_GetBuildQualities;
import ms.tfs.build.buildservice._03._BuildServiceSoap_GetBuildQualitiesResponse;
import ms.tfs.build.buildservice._03._BuildServiceSoap_ProcessChangeset;
import ms.tfs.build.buildservice._03._BuildServiceSoap_ProcessChangesetResponse;
import ms.tfs.build.buildservice._03._BuildServiceSoap_QueryBuildAgentsByUri;
import ms.tfs.build.buildservice._03._BuildServiceSoap_QueryBuildAgentsByUriResponse;
import ms.tfs.build.buildservice._03._BuildServiceSoap_QueryBuildDefinitionsByUri;
import ms.tfs.build.buildservice._03._BuildServiceSoap_QueryBuildDefinitionsByUriResponse;
import ms.tfs.build.buildservice._03._BuildServiceSoap_QueryBuildGroups;
import ms.tfs.build.buildservice._03._BuildServiceSoap_QueryBuildGroupsResponse;
import ms.tfs.build.buildservice._03._BuildServiceSoap_QueryBuildQueue;
import ms.tfs.build.buildservice._03._BuildServiceSoap_QueryBuildQueueById;
import ms.tfs.build.buildservice._03._BuildServiceSoap_QueryBuildQueueByIdResponse;
import ms.tfs.build.buildservice._03._BuildServiceSoap_QueryBuildQueueResponse;
import ms.tfs.build.buildservice._03._BuildServiceSoap_QueryBuilds;
import ms.tfs.build.buildservice._03._BuildServiceSoap_QueryBuildsByUri;
import ms.tfs.build.buildservice._03._BuildServiceSoap_QueryBuildsByUriResponse;
import ms.tfs.build.buildservice._03._BuildServiceSoap_QueryBuildsResponse;
import ms.tfs.build.buildservice._03._BuildServiceSoap_QueueBuild;
import ms.tfs.build.buildservice._03._BuildServiceSoap_QueueBuildResponse;
import ms.tfs.build.buildservice._03._BuildServiceSoap_StopBuilds;
import ms.tfs.build.buildservice._03._BuildServiceSoap_StopBuildsResponse;
import ms.tfs.build.buildservice._03._BuildServiceSoap_UpdateBuildAgents;
import ms.tfs.build.buildservice._03._BuildServiceSoap_UpdateBuildAgentsResponse;
import ms.tfs.build.buildservice._03._BuildServiceSoap_UpdateBuildDefinitions;
import ms.tfs.build.buildservice._03._BuildServiceSoap_UpdateBuildDefinitionsResponse;
import ms.tfs.build.buildservice._03._BuildServiceSoap_UpdateBuildInformation;
import ms.tfs.build.buildservice._03._BuildServiceSoap_UpdateBuildInformationResponse;
import ms.tfs.build.buildservice._03._BuildServiceSoap_UpdateBuilds;
import ms.tfs.build.buildservice._03._BuildServiceSoap_UpdateBuildsResponse;
import ms.tfs.build.buildservice._03._BuildServiceSoap_UpdateQueuedBuilds;
import ms.tfs.build.buildservice._03._BuildServiceSoap_UpdateQueuedBuildsResponse;
import ms.tfs.build.buildservice._03._BuildStatus;
import ms.tfs.build.buildservice._03._BuildUpdate;
import ms.tfs.build.buildservice._03._BuildUpdateOptions;
import ms.tfs.build.buildservice._03._ContinuousIntegrationType;
import ms.tfs.build.buildservice._03._DeleteOptions;
import ms.tfs.build.buildservice._03._Failure;
import ms.tfs.build.buildservice._03._GetOption;
import ms.tfs.build.buildservice._03._InformationChangeRequest;
import ms.tfs.build.buildservice._03._InformationField;
import ms.tfs.build.buildservice._03._ProcessTemplate;
import ms.tfs.build.buildservice._03._ProcessTemplateType;
import ms.tfs.build.buildservice._03._QueryDeletedOption;
import ms.tfs.build.buildservice._03._QueryOptions;
import ms.tfs.build.buildservice._03._QueueOptions;
import ms.tfs.build.buildservice._03._QueuePriority;
import ms.tfs.build.buildservice._03._QueueStatus;
import ms.tfs.build.buildservice._03._QueuedBuild2008;
import ms.tfs.build.buildservice._03._QueuedBuildUpdate;
import ms.tfs.build.buildservice._03._QueuedBuildUpdateOptions;
import ms.tfs.build.buildservice._03._RetentionPolicy;
import ms.tfs.build.buildservice._03._Schedule;
import ms.tfs.build.buildservice._03._ScheduleDays;
import ms.tfs.build.buildservice._03._WorkspaceMapping;
import ms.tfs.build.buildservice._03._WorkspaceMappingType;
import ms.tfs.build.buildservice._03._WorkspaceTemplate;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

import java.lang.String;

import java.net.URI;

import java.util.Calendar;

import javax.xml.namespace.QName;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.XMLStreamWriter;

/**
 * Automatically generated service interface.
 *
 * {http://schemas.microsoft.com/TeamFoundation/2005/06/Build/BuildService/03}BuildServiceSoap12Service
 */
public class _BuildServiceSoap12Service
    extends SOAP12Service
    implements _BuildServiceSoap
{
    private static final QName PORT_QNAME = new QName(
                "http://schemas.microsoft.com/TeamFoundation/2005/06/Build/BuildService/03",
                "BuildServiceSoap12Service");
    private static final String ENDPOINT_PATH = "/tfs/DefaultCollection/Build/v2.0/BuildService.asmx";

    public _BuildServiceSoap12Service(
        final URI endpoint,
        final QName port)
    {
        super(endpoint, port);
    }

    public _BuildServiceSoap12Service(
        final HttpClient client,
        URI endpoint,
        QName port)
    {
        super(client, endpoint, port);
    }

    /**
     * @return the qualified name of the WSDL port this service implementation can be used with
     */
    public static QName getPortQName()
    {
        return _BuildServiceSoap12Service.PORT_QNAME;
    }

    /**
     * @return the path part to use when constructing a URI to contact a host that provides this service
     */
    public static String getEndpointPath()
    {
        return _BuildServiceSoap12Service.ENDPOINT_PATH;
    }

    public _BuildDefinition[] addBuildDefinitions(final _BuildDefinition[] definitions)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_AddBuildDefinitions requestData = new _BuildServiceSoap_AddBuildDefinitions(definitions);

        final SOAPRequest request = createSOAPRequest(
                "AddBuildDefinitions",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "AddBuildDefinitions");
                    }
                });

        final _BuildServiceSoap_AddBuildDefinitionsResponse responseData = new _BuildServiceSoap_AddBuildDefinitionsResponse();

        executeSOAPRequest(
            request,
            "AddBuildDefinitionsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getAddBuildDefinitionsResult();
    }

    public void addBuildQualities(
        final String teamProject,
        final String[] qualities)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_AddBuildQualities requestData = new _BuildServiceSoap_AddBuildQualities(teamProject,
                qualities);

        final SOAPRequest request = createSOAPRequest(
                "AddBuildQualities",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "AddBuildQualities");
                    }
                });

        final _BuildServiceSoap_AddBuildQualitiesResponse responseData = new _BuildServiceSoap_AddBuildQualitiesResponse();

        executeSOAPRequest(
            request,
            "AddBuildQualitiesResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }

    public void cancelBuilds(final int[] ids)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_CancelBuilds requestData = new _BuildServiceSoap_CancelBuilds(ids);

        final SOAPRequest request = createSOAPRequest(
                "CancelBuilds",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "CancelBuilds");
                    }
                });

        final _BuildServiceSoap_CancelBuildsResponse responseData = new _BuildServiceSoap_CancelBuildsResponse();

        executeSOAPRequest(
            request,
            "CancelBuildsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }

    public void deleteBuildDefinitions(final String[] uris)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_DeleteBuildDefinitions requestData = new _BuildServiceSoap_DeleteBuildDefinitions(uris);

        final SOAPRequest request = createSOAPRequest(
                "DeleteBuildDefinitions",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "DeleteBuildDefinitions");
                    }
                });

        final _BuildServiceSoap_DeleteBuildDefinitionsResponse responseData = new _BuildServiceSoap_DeleteBuildDefinitionsResponse();

        executeSOAPRequest(
            request,
            "DeleteBuildDefinitionsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }

    public void deleteBuildQualities(
        final String teamProject,
        final String[] qualities)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_DeleteBuildQualities requestData = new _BuildServiceSoap_DeleteBuildQualities(teamProject,
                qualities);

        final SOAPRequest request = createSOAPRequest(
                "DeleteBuildQualities",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "DeleteBuildQualities");
                    }
                });

        final _BuildServiceSoap_DeleteBuildQualitiesResponse responseData = new _BuildServiceSoap_DeleteBuildQualitiesResponse();

        executeSOAPRequest(
            request,
            "DeleteBuildQualitiesResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }

    public _BuildDeletionResult[] deleteBuilds(final String[] uris)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_DeleteBuilds requestData = new _BuildServiceSoap_DeleteBuilds(uris);

        final SOAPRequest request = createSOAPRequest(
                "DeleteBuilds",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "DeleteBuilds");
                    }
                });

        final _BuildServiceSoap_DeleteBuildsResponse responseData = new _BuildServiceSoap_DeleteBuildsResponse();

        executeSOAPRequest(
            request,
            "DeleteBuildsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getDeleteBuildsResult();
    }

    public void evaluateSchedules()
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_EvaluateSchedules requestData = new _BuildServiceSoap_EvaluateSchedules();

        final SOAPRequest request = createSOAPRequest(
                "EvaluateSchedules",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "EvaluateSchedules");
                    }
                });

        final _BuildServiceSoap_EvaluateSchedulesResponse responseData = new _BuildServiceSoap_EvaluateSchedulesResponse();

        executeSOAPRequest(
            request,
            "EvaluateSchedulesResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }

    public _BuildDefinition[] getAffectedBuildDefinitions(final String[] serverItems)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_GetAffectedBuildDefinitions requestData = new _BuildServiceSoap_GetAffectedBuildDefinitions(
                    serverItems);

        final SOAPRequest request = createSOAPRequest(
                "GetAffectedBuildDefinitions",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetAffectedBuildDefinitions");
                    }
                });

        final _BuildServiceSoap_GetAffectedBuildDefinitionsResponse responseData = new _BuildServiceSoap_GetAffectedBuildDefinitionsResponse();

        executeSOAPRequest(
            request,
            "GetAffectedBuildDefinitionsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getGetAffectedBuildDefinitionsResult();
    }

    public String[] getBuildQualities(final String teamProject)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_GetBuildQualities requestData = new _BuildServiceSoap_GetBuildQualities(teamProject);

        final SOAPRequest request = createSOAPRequest(
                "GetBuildQualities",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetBuildQualities");
                    }
                });

        final _BuildServiceSoap_GetBuildQualitiesResponse responseData = new _BuildServiceSoap_GetBuildQualitiesResponse();

        executeSOAPRequest(
            request,
            "GetBuildQualitiesResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getGetBuildQualitiesResult();
    }

    public _BuildAgent2008[] queryBuildAgentsByUri(final String[] uris)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_QueryBuildAgentsByUri requestData = new _BuildServiceSoap_QueryBuildAgentsByUri(uris);

        final SOAPRequest request = createSOAPRequest(
                "QueryBuildAgentsByUri",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "QueryBuildAgentsByUri");
                    }
                });

        final _BuildServiceSoap_QueryBuildAgentsByUriResponse responseData = new _BuildServiceSoap_QueryBuildAgentsByUriResponse();

        executeSOAPRequest(
            request,
            "QueryBuildAgentsByUriResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getQueryBuildAgentsByUriResult();
    }

    public _BuildGroupQueryResult queryBuildDefinitionsByUri(final String[] uris)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_QueryBuildDefinitionsByUri requestData = new _BuildServiceSoap_QueryBuildDefinitionsByUri(
                    uris);

        final SOAPRequest request = createSOAPRequest(
                "QueryBuildDefinitionsByUri",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "QueryBuildDefinitionsByUri");
                    }
                });

        final _BuildServiceSoap_QueryBuildDefinitionsByUriResponse responseData = new _BuildServiceSoap_QueryBuildDefinitionsByUriResponse();

        executeSOAPRequest(
            request,
            "QueryBuildDefinitionsByUriResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getQueryBuildDefinitionsByUriResult();
    }

    public _BuildGroupQueryResult[] queryBuildGroups(final _BuildGroupItemSpec[] specs)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_QueryBuildGroups requestData = new _BuildServiceSoap_QueryBuildGroups(specs);

        final SOAPRequest request = createSOAPRequest(
                "QueryBuildGroups",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "QueryBuildGroups");
                    }
                });

        final _BuildServiceSoap_QueryBuildGroupsResponse responseData = new _BuildServiceSoap_QueryBuildGroupsResponse();

        executeSOAPRequest(
            request,
            "QueryBuildGroupsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getQueryBuildGroupsResult();
    }

    public _BuildQueryResult2008[] queryBuilds(final _BuildDetailSpec[] specs)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_QueryBuilds requestData = new _BuildServiceSoap_QueryBuilds(specs);

        final SOAPRequest request = createSOAPRequest(
                "QueryBuilds",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "QueryBuilds");
                    }
                });

        final _BuildServiceSoap_QueryBuildsResponse responseData = new _BuildServiceSoap_QueryBuildsResponse();

        executeSOAPRequest(
            request,
            "QueryBuildsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getQueryBuildsResult();
    }

    public _BuildQueryResult2008 queryBuildsByUri(
        final String[] uris,
        final String[] informationTypes,
        final _QueryOptions options)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_QueryBuildsByUri requestData = new _BuildServiceSoap_QueryBuildsByUri(uris,
                informationTypes, options);

        final SOAPRequest request = createSOAPRequest(
                "QueryBuildsByUri",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "QueryBuildsByUri");
                    }
                });

        final _BuildServiceSoap_QueryBuildsByUriResponse responseData = new _BuildServiceSoap_QueryBuildsByUriResponse();

        executeSOAPRequest(
            request,
            "QueryBuildsByUriResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getQueryBuildsByUriResult();
    }

    public _BuildQueueQueryResult2008[] queryBuildQueue(final _BuildQueueSpec2008[] specs)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_QueryBuildQueue requestData = new _BuildServiceSoap_QueryBuildQueue(specs);

        final SOAPRequest request = createSOAPRequest(
                "QueryBuildQueue",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "QueryBuildQueue");
                    }
                });

        final _BuildServiceSoap_QueryBuildQueueResponse responseData = new _BuildServiceSoap_QueryBuildQueueResponse();

        executeSOAPRequest(
            request,
            "QueryBuildQueueResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getQueryBuildQueueResult();
    }

    public _BuildQueueQueryResult2008 queryBuildQueueById(
        final int[] ids,
        final _QueryOptions options)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_QueryBuildQueueById requestData = new _BuildServiceSoap_QueryBuildQueueById(ids, options);

        final SOAPRequest request = createSOAPRequest(
                "QueryBuildQueueById",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "QueryBuildQueueById");
                    }
                });

        final _BuildServiceSoap_QueryBuildQueueByIdResponse responseData = new _BuildServiceSoap_QueryBuildQueueByIdResponse();

        executeSOAPRequest(
            request,
            "QueryBuildQueueByIdResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getQueryBuildQueueByIdResult();
    }

    public _QueuedBuild2008 queueBuild(
        final _BuildRequest2008 buildRequest,
        final _QueueOptions options)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_QueueBuild requestData = new _BuildServiceSoap_QueueBuild(buildRequest, options);

        final SOAPRequest request = createSOAPRequest(
                "QueueBuild",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "QueueBuild");
                    }
                });

        final _BuildServiceSoap_QueueBuildResponse responseData = new _BuildServiceSoap_QueueBuildResponse();

        executeSOAPRequest(
            request,
            "QueueBuildResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getQueueBuildResult();
    }

    public void stopBuilds(final String[] uris)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_StopBuilds requestData = new _BuildServiceSoap_StopBuilds(uris);

        final SOAPRequest request = createSOAPRequest(
                "StopBuilds",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "StopBuilds");
                    }
                });

        final _BuildServiceSoap_StopBuildsResponse responseData = new _BuildServiceSoap_StopBuildsResponse();

        executeSOAPRequest(
            request,
            "StopBuildsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }

    public _BuildDetail[] updateBuilds(final _BuildUpdateOptions[] updateOptions)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_UpdateBuilds requestData = new _BuildServiceSoap_UpdateBuilds(updateOptions);

        final SOAPRequest request = createSOAPRequest(
                "UpdateBuilds",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "UpdateBuilds");
                    }
                });

        final _BuildServiceSoap_UpdateBuildsResponse responseData = new _BuildServiceSoap_UpdateBuildsResponse();

        executeSOAPRequest(
            request,
            "UpdateBuildsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getUpdateBuildsResult();
    }

    public _QueuedBuild2008[] updateQueuedBuilds(final _QueuedBuildUpdateOptions[] updateOptions)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_UpdateQueuedBuilds requestData = new _BuildServiceSoap_UpdateQueuedBuilds(updateOptions);

        final SOAPRequest request = createSOAPRequest(
                "UpdateQueuedBuilds",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "UpdateQueuedBuilds");
                    }
                });

        final _BuildServiceSoap_UpdateQueuedBuildsResponse responseData = new _BuildServiceSoap_UpdateQueuedBuildsResponse();

        executeSOAPRequest(
            request,
            "UpdateQueuedBuildsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getUpdateQueuedBuildsResult();
    }

    public _BuildAgent2008[] addBuildAgents(final _BuildAgent2008[] agents)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_AddBuildAgents requestData = new _BuildServiceSoap_AddBuildAgents(agents);

        final SOAPRequest request = createSOAPRequest(
                "AddBuildAgents",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "AddBuildAgents");
                    }
                });

        final _BuildServiceSoap_AddBuildAgentsResponse responseData = new _BuildServiceSoap_AddBuildAgentsResponse();

        executeSOAPRequest(
            request,
            "AddBuildAgentsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getAddBuildAgentsResult();
    }

    public void deleteBuildAgents(final String[] uris)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_DeleteBuildAgents requestData = new _BuildServiceSoap_DeleteBuildAgents(uris);

        final SOAPRequest request = createSOAPRequest(
                "DeleteBuildAgents",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "DeleteBuildAgents");
                    }
                });

        final _BuildServiceSoap_DeleteBuildAgentsResponse responseData = new _BuildServiceSoap_DeleteBuildAgentsResponse();

        executeSOAPRequest(
            request,
            "DeleteBuildAgentsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }

    public void processChangeset(final int changesetId)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_ProcessChangeset requestData = new _BuildServiceSoap_ProcessChangeset(changesetId);

        final SOAPRequest request = createSOAPRequest(
                "ProcessChangeset",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "ProcessChangeset");
                    }
                });

        final _BuildServiceSoap_ProcessChangesetResponse responseData = new _BuildServiceSoap_ProcessChangesetResponse();

        executeSOAPRequest(
            request,
            "ProcessChangesetResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }

    public _BuildAgent2008[] updateBuildAgents(final _BuildAgent2008[] updates)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_UpdateBuildAgents requestData = new _BuildServiceSoap_UpdateBuildAgents(updates);

        final SOAPRequest request = createSOAPRequest(
                "UpdateBuildAgents",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "UpdateBuildAgents");
                    }
                });

        final _BuildServiceSoap_UpdateBuildAgentsResponse responseData = new _BuildServiceSoap_UpdateBuildAgentsResponse();

        executeSOAPRequest(
            request,
            "UpdateBuildAgentsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getUpdateBuildAgentsResult();
    }

    public _BuildDefinition[] updateBuildDefinitions(final _BuildDefinition[] updates)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_UpdateBuildDefinitions requestData = new _BuildServiceSoap_UpdateBuildDefinitions(updates);

        final SOAPRequest request = createSOAPRequest(
                "UpdateBuildDefinitions",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "UpdateBuildDefinitions");
                    }
                });

        final _BuildServiceSoap_UpdateBuildDefinitionsResponse responseData = new _BuildServiceSoap_UpdateBuildDefinitionsResponse();

        executeSOAPRequest(
            request,
            "UpdateBuildDefinitionsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getUpdateBuildDefinitionsResult();
    }

    public _BuildInformationNode[] updateBuildInformation(final _InformationChangeRequest[] changes)
        throws TransportException, SOAPFault
    {
        final _BuildServiceSoap_UpdateBuildInformation requestData = new _BuildServiceSoap_UpdateBuildInformation(changes);

        final SOAPRequest request = createSOAPRequest(
                "UpdateBuildInformation",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "UpdateBuildInformation");
                    }
                });

        final _BuildServiceSoap_UpdateBuildInformationResponse responseData = new _BuildServiceSoap_UpdateBuildInformationResponse();

        executeSOAPRequest(
            request,
            "UpdateBuildInformationResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getUpdateBuildInformationResult();
    }
}
