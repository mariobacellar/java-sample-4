// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See License.txt in the repository root.

 /*
 * This file was automatically generated by com.microsoft.tfs.core.ws.generator.Generator
 * from the /complexType.vm template.
 */
package ms.tfs.build.buildinfo._03;

import com.microsoft.tfs.core.ws.runtime.*;
import com.microsoft.tfs.core.ws.runtime.serialization.*;
import com.microsoft.tfs.core.ws.runtime.types.*;
import com.microsoft.tfs.core.ws.runtime.util.*;
import com.microsoft.tfs.core.ws.runtime.xml.*;

import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_UpdateBuildFinishTime;

import java.lang.String;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;

import javax.xml.stream.XMLStreamConstants;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.XMLStreamWriter;

/**
 * Automatically generated complex type class.
 */
public class _BuildStoreWebServiceSoap_UpdateBuildFinishTime
    implements ElementSerializable
{
    // No attributes    

    // Elements
    protected String buildUri;
    protected Calendar finishTime;

    public _BuildStoreWebServiceSoap_UpdateBuildFinishTime()
    {
        super();
    }

    public _BuildStoreWebServiceSoap_UpdateBuildFinishTime(
        final String buildUri,
        final Calendar finishTime)
    {
        // TODO : Call super() instead of setting all fields directly?
        setBuildUri(buildUri);
        setFinishTime(finishTime);
    }

    public String getBuildUri()
    {
        return this.buildUri;
    }

    public void setBuildUri(String value)
    {
        this.buildUri = value;
    }

    public Calendar getFinishTime()
    {
        return this.finishTime;
    }

    public void setFinishTime(Calendar value)
    {
        if (value == null)
        {
            throw new IllegalArgumentException("'finishTime' is a required element, its value cannot be null");
        }

        this.finishTime = value;
    }

    public void writeAsElement(
        final XMLStreamWriter writer,
        final String name)
        throws XMLStreamException
    {
        writer.writeStartElement(name);

        // Elements
        XMLStreamWriterHelper.writeElement(
            writer,
            "buildUri",
            this.buildUri);
        XMLStreamWriterHelper.writeElement(
            writer,
            "finishTime",
            this.finishTime,
            true);

        writer.writeEndElement();
    }
}
