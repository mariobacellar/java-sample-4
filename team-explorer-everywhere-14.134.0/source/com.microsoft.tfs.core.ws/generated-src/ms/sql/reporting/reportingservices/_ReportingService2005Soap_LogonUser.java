// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See License.txt in the repository root.

 /*
 * This file was automatically generated by com.microsoft.tfs.core.ws.generator.Generator
 * from the /complexType.vm template.
 */
package ms.sql.reporting.reportingservices;

import com.microsoft.tfs.core.ws.runtime.*;
import com.microsoft.tfs.core.ws.runtime.serialization.*;
import com.microsoft.tfs.core.ws.runtime.types.*;
import com.microsoft.tfs.core.ws.runtime.util.*;
import com.microsoft.tfs.core.ws.runtime.xml.*;

import ms.sql.reporting.reportingservices._ReportingService2005Soap_LogonUser;

import java.lang.String;

import java.util.ArrayList;
import java.util.List;

import javax.xml.stream.XMLStreamConstants;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.XMLStreamWriter;

/**
 * Automatically generated complex type class.
 */
public class _ReportingService2005Soap_LogonUser
    implements ElementSerializable
{
    // No attributes    

    // Elements
    protected String userName;
    protected String password;
    protected String authority;

    public _ReportingService2005Soap_LogonUser()
    {
        super();
    }

    public _ReportingService2005Soap_LogonUser(
        final String userName,
        final String password,
        final String authority)
    {
        // TODO : Call super() instead of setting all fields directly?
        setUserName(userName);
        setPassword(password);
        setAuthority(authority);
    }

    public String getUserName()
    {
        return this.userName;
    }

    public void setUserName(String value)
    {
        this.userName = value;
    }

    public String getPassword()
    {
        return this.password;
    }

    public void setPassword(String value)
    {
        this.password = value;
    }

    public String getAuthority()
    {
        return this.authority;
    }

    public void setAuthority(String value)
    {
        this.authority = value;
    }

    public void writeAsElement(
        final XMLStreamWriter writer,
        final String name)
        throws XMLStreamException
    {
        writer.writeStartElement(name);

        // Elements
        XMLStreamWriterHelper.writeElement(
            writer,
            "userName",
            this.userName);
        XMLStreamWriterHelper.writeElement(
            writer,
            "password",
            this.password);
        XMLStreamWriterHelper.writeElement(
            writer,
            "authority",
            this.authority);

        writer.writeEndElement();
    }
}
