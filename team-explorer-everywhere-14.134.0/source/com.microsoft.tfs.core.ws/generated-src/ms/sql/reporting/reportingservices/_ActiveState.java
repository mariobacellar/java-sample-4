// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See License.txt in the repository root.

 /*
 * This file was automatically generated by com.microsoft.tfs.core.ws.generator.Generator
 * from the /complexType.vm template.
 */
package ms.sql.reporting.reportingservices;

import com.microsoft.tfs.core.ws.runtime.*;
import com.microsoft.tfs.core.ws.runtime.serialization.*;
import com.microsoft.tfs.core.ws.runtime.types.*;
import com.microsoft.tfs.core.ws.runtime.util.*;
import com.microsoft.tfs.core.ws.runtime.xml.*;

import ms.sql.reporting.reportingservices._ActiveState;

import java.util.ArrayList;
import java.util.List;

import javax.xml.stream.XMLStreamConstants;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.XMLStreamWriter;

/**
 * Automatically generated complex type class.
 */
public class _ActiveState
    implements ElementSerializable, ElementDeserializable
{
    // No attributes    

    // Elements
    protected boolean deliveryExtensionRemoved;
    protected boolean sharedDataSourceRemoved;
    protected boolean missingParameterValue;
    protected boolean invalidParameterValue;
    protected boolean unknownReportParameter;

    public _ActiveState()
    {
        super();
    }

    public _ActiveState(
        final boolean deliveryExtensionRemoved,
        final boolean sharedDataSourceRemoved,
        final boolean missingParameterValue,
        final boolean invalidParameterValue,
        final boolean unknownReportParameter)
    {
        // TODO : Call super() instead of setting all fields directly?
        setDeliveryExtensionRemoved(deliveryExtensionRemoved);
        setSharedDataSourceRemoved(sharedDataSourceRemoved);
        setMissingParameterValue(missingParameterValue);
        setInvalidParameterValue(invalidParameterValue);
        setUnknownReportParameter(unknownReportParameter);
    }

    public boolean isDeliveryExtensionRemoved()
    {
        return this.deliveryExtensionRemoved;
    }

    public void setDeliveryExtensionRemoved(boolean value)
    {
        this.deliveryExtensionRemoved = value;
    }

    public boolean isSharedDataSourceRemoved()
    {
        return this.sharedDataSourceRemoved;
    }

    public void setSharedDataSourceRemoved(boolean value)
    {
        this.sharedDataSourceRemoved = value;
    }

    public boolean isMissingParameterValue()
    {
        return this.missingParameterValue;
    }

    public void setMissingParameterValue(boolean value)
    {
        this.missingParameterValue = value;
    }

    public boolean isInvalidParameterValue()
    {
        return this.invalidParameterValue;
    }

    public void setInvalidParameterValue(boolean value)
    {
        this.invalidParameterValue = value;
    }

    public boolean isUnknownReportParameter()
    {
        return this.unknownReportParameter;
    }

    public void setUnknownReportParameter(boolean value)
    {
        this.unknownReportParameter = value;
    }

    public void writeAsElement(
        final XMLStreamWriter writer,
        final String name)
        throws XMLStreamException
    {
        writer.writeStartElement(name);

        // Elements
        XMLStreamWriterHelper.writeElement(
            writer,
            "DeliveryExtensionRemoved",
            this.deliveryExtensionRemoved);
        XMLStreamWriterHelper.writeElement(
            writer,
            "SharedDataSourceRemoved",
            this.sharedDataSourceRemoved);
        XMLStreamWriterHelper.writeElement(
            writer,
            "MissingParameterValue",
            this.missingParameterValue);
        XMLStreamWriterHelper.writeElement(
            writer,
            "InvalidParameterValue",
            this.invalidParameterValue);
        XMLStreamWriterHelper.writeElement(
            writer,
            "UnknownReportParameter",
            this.unknownReportParameter);

        writer.writeEndElement();
    }

    public void readFromElement(final XMLStreamReader reader)
        throws XMLStreamException
    {
        String localName;

        // This object uses no attributes

        // Elements
        int event;

        do
        {
            event = reader.next();

            if (event == XMLStreamConstants.START_ELEMENT)
            {
                localName = reader.getLocalName();

                if (localName.equalsIgnoreCase("DeliveryExtensionRemoved"))
                {
                    this.deliveryExtensionRemoved = XMLConvert.toBoolean(reader.getElementText());
                }
                else if (localName.equalsIgnoreCase("SharedDataSourceRemoved"))
                {
                    this.sharedDataSourceRemoved = XMLConvert.toBoolean(reader.getElementText());
                }
                else if (localName.equalsIgnoreCase("MissingParameterValue"))
                {
                    this.missingParameterValue = XMLConvert.toBoolean(reader.getElementText());
                }
                else if (localName.equalsIgnoreCase("InvalidParameterValue"))
                {
                    this.invalidParameterValue = XMLConvert.toBoolean(reader.getElementText());
                }
                else if (localName.equalsIgnoreCase("UnknownReportParameter"))
                {
                    this.unknownReportParameter = XMLConvert.toBoolean(reader.getElementText());
                }
                else
                {
                    // Read the unknown child element until its end
                    XMLStreamReaderHelper.readUntilElementEnd(reader);
                }
            }
        }
        while (event != XMLStreamConstants.END_ELEMENT);
    }
}
