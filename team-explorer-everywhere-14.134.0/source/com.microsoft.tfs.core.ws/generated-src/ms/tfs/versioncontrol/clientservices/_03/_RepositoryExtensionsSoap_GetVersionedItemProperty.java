// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See License.txt in the repository root.

 /*
 * This file was automatically generated by com.microsoft.tfs.core.ws.generator.Generator
 * from the /complexType.vm template.
 */
package ms.tfs.versioncontrol.clientservices._03;

import com.microsoft.tfs.core.ws.runtime.*;
import com.microsoft.tfs.core.ws.runtime.serialization.*;
import com.microsoft.tfs.core.ws.runtime.types.*;
import com.microsoft.tfs.core.ws.runtime.util.*;
import com.microsoft.tfs.core.ws.runtime.xml.*;

import ms.tfs.versioncontrol.clientservices._03._DeletedState;
import ms.tfs.versioncontrol.clientservices._03._ItemSpec;
import ms.tfs.versioncontrol.clientservices._03._ItemType;
import ms.tfs.versioncontrol.clientservices._03._RecursionType;
import ms.tfs.versioncontrol.clientservices._03._RepositoryExtensionsSoap_GetVersionedItemProperty;
import ms.tfs.versioncontrol.clientservices._03._VersionSpec;

import java.lang.String;

import java.util.ArrayList;
import java.util.List;

import javax.xml.stream.XMLStreamConstants;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.XMLStreamWriter;

/**
 * Automatically generated complex type class.
 */
public class _RepositoryExtensionsSoap_GetVersionedItemProperty
    implements ElementSerializable
{
    // No attributes    

    // Elements
    protected String workspaceName;
    protected String workspaceOwner;
    protected _ItemSpec[] itemSpecs;
    protected _VersionSpec versionSpec;
    protected _DeletedState deletedState;
    protected _ItemType itemType;
    protected String[] propertyNameFilters;

    public _RepositoryExtensionsSoap_GetVersionedItemProperty()
    {
        super();
    }

    public _RepositoryExtensionsSoap_GetVersionedItemProperty(
        final String workspaceName,
        final String workspaceOwner,
        final _ItemSpec[] itemSpecs,
        final _VersionSpec versionSpec,
        final _DeletedState deletedState,
        final _ItemType itemType,
        final String[] propertyNameFilters)
    {
        // TODO : Call super() instead of setting all fields directly?
        setWorkspaceName(workspaceName);
        setWorkspaceOwner(workspaceOwner);
        setItemSpecs(itemSpecs);
        setVersionSpec(versionSpec);
        setDeletedState(deletedState);
        setItemType(itemType);
        setPropertyNameFilters(propertyNameFilters);
    }

    public String getWorkspaceName()
    {
        return this.workspaceName;
    }

    public void setWorkspaceName(String value)
    {
        this.workspaceName = value;
    }

    public String getWorkspaceOwner()
    {
        return this.workspaceOwner;
    }

    public void setWorkspaceOwner(String value)
    {
        this.workspaceOwner = value;
    }

    public _ItemSpec[] getItemSpecs()
    {
        return this.itemSpecs;
    }

    public void setItemSpecs(_ItemSpec[] value)
    {
        this.itemSpecs = value;
    }

    public _VersionSpec getVersionSpec()
    {
        return this.versionSpec;
    }

    public void setVersionSpec(_VersionSpec value)
    {
        this.versionSpec = value;
    }

    public _DeletedState getDeletedState()
    {
        return this.deletedState;
    }

    public void setDeletedState(_DeletedState value)
    {
        if (value == null)
        {
            throw new IllegalArgumentException("'deletedState' is a required element, its value cannot be null");
        }

        this.deletedState = value;
    }

    public _ItemType getItemType()
    {
        return this.itemType;
    }

    public void setItemType(_ItemType value)
    {
        if (value == null)
        {
            throw new IllegalArgumentException("'itemType' is a required element, its value cannot be null");
        }

        this.itemType = value;
    }

    public String[] getPropertyNameFilters()
    {
        return this.propertyNameFilters;
    }

    public void setPropertyNameFilters(String[] value)
    {
        this.propertyNameFilters = value;
    }

    public void writeAsElement(
        final XMLStreamWriter writer,
        final String name)
        throws XMLStreamException
    {
        writer.writeStartElement(name);

        // Elements
        XMLStreamWriterHelper.writeElement(
            writer,
            "workspaceName",
            this.workspaceName);
        XMLStreamWriterHelper.writeElement(
            writer,
            "workspaceOwner",
            this.workspaceOwner);

        if (this.itemSpecs != null)
        {
            /*
             * The element type is an array.
             */
            writer.writeStartElement("itemSpecs");

            for (int iterator0 = 0; iterator0 < this.itemSpecs.length; iterator0++)
            {
                this.itemSpecs[iterator0].writeAsElement(
                    writer,
                    "ItemSpec");
            }

            writer.writeEndElement();
        }

        if (this.versionSpec != null)
        {
            this.versionSpec.writeAsElement(
                writer,
                "versionSpec");
        }

        this.deletedState.writeAsElement(
            writer,
            "deletedState");
        this.itemType.writeAsElement(
            writer,
            "itemType");

        if (this.propertyNameFilters != null)
        {
            /*
             * The element type is an array.
             */
            writer.writeStartElement("propertyNameFilters");

            for (int iterator0 = 0; iterator0 < this.propertyNameFilters.length; iterator0++)
            {
                XMLStreamWriterHelper.writeElement(
                    writer,
                    "string",
                    this.propertyNameFilters[iterator0]);
            }

            writer.writeEndElement();
        }

        writer.writeEndElement();
    }
}
