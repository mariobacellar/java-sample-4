// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See License.txt in the repository root.

 /*
 * This file was automatically generated by com.microsoft.tfs.core.ws.generator.Generator
 * from the /complexType.vm template.
 */
package ms.sql.reporting.reportingservices;

import com.microsoft.tfs.core.ws.runtime.*;
import com.microsoft.tfs.core.ws.runtime.serialization.*;
import com.microsoft.tfs.core.ws.runtime.types.*;
import com.microsoft.tfs.core.ws.runtime.util.*;
import com.microsoft.tfs.core.ws.runtime.xml.*;

import ms.sql.reporting.reportingservices._DailyRecurrence;
import ms.sql.reporting.reportingservices._DaysOfWeekSelector;
import ms.sql.reporting.reportingservices._MinuteRecurrence;
import ms.sql.reporting.reportingservices._MonthlyDOWRecurrence;
import ms.sql.reporting.reportingservices._MonthlyRecurrence;
import ms.sql.reporting.reportingservices._MonthsOfYearSelector;
import ms.sql.reporting.reportingservices._NoSchedule;
import ms.sql.reporting.reportingservices._ReportingService2005Soap_GetReportHistoryOptionsResponse;
import ms.sql.reporting.reportingservices._ScheduleDefinition;
import ms.sql.reporting.reportingservices._ScheduleReference;
import ms.sql.reporting.reportingservices._WeekNumberEnum;
import ms.sql.reporting.reportingservices._WeeklyRecurrence;

import java.lang.String;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;

import javax.xml.stream.XMLStreamConstants;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.XMLStreamWriter;

/**
 * Automatically generated complex type class.
 */
public class _ReportingService2005Soap_GetReportHistoryOptionsResponse
    implements ElementDeserializable
{
    // No attributes    

    // Elements
    protected boolean enableManualSnapshotCreation;
    protected boolean keepExecutionSnapshots;

    /**
     * <p><em>XML Schema Choice Warning</em></p>
     * <p>Only one of these elements may be non-null when this object is serialized:<p>
     * <ul>
     * <li><code>ScheduleDefinition</code></li>
     * <li><code>ScheduleReference</code></li>
     * <li><code>NoSchedule</code></li>
     * </ul>
     * </p>
     */
    protected _ScheduleDefinition scheduleDefinition;

    /**
     * <p><em>XML Schema Choice Warning</em></p>
     * <p>Only one of these elements may be non-null when this object is serialized:<p>
     * <ul>
     * <li><code>ScheduleDefinition</code></li>
     * <li><code>ScheduleReference</code></li>
     * <li><code>NoSchedule</code></li>
     * </ul>
     * </p>
     */
    protected _ScheduleReference scheduleReference;

    /**
     * <p><em>XML Schema Choice Warning</em></p>
     * <p>Only one of these elements may be non-null when this object is serialized:<p>
     * <ul>
     * <li><code>ScheduleDefinition</code></li>
     * <li><code>ScheduleReference</code></li>
     * <li><code>NoSchedule</code></li>
     * </ul>
     * </p>
     */
    protected _NoSchedule noSchedule;

    public _ReportingService2005Soap_GetReportHistoryOptionsResponse()
    {
        super();
    }

    public _ReportingService2005Soap_GetReportHistoryOptionsResponse(
        final boolean enableManualSnapshotCreation,
        final boolean keepExecutionSnapshots,
        final _ScheduleDefinition scheduleDefinition,
        final _ScheduleReference scheduleReference,
        final _NoSchedule noSchedule)
    {
        // TODO : Call super() instead of setting all fields directly?
        setEnableManualSnapshotCreation(enableManualSnapshotCreation);
        setKeepExecutionSnapshots(keepExecutionSnapshots);
        setScheduleDefinition(scheduleDefinition);
        setScheduleReference(scheduleReference);
        setNoSchedule(noSchedule);
    }

    public boolean isEnableManualSnapshotCreation()
    {
        return this.enableManualSnapshotCreation;
    }

    public void setEnableManualSnapshotCreation(boolean value)
    {
        this.enableManualSnapshotCreation = value;
    }

    public boolean isKeepExecutionSnapshots()
    {
        return this.keepExecutionSnapshots;
    }

    public void setKeepExecutionSnapshots(boolean value)
    {
        this.keepExecutionSnapshots = value;
    }

    public _ScheduleDefinition getScheduleDefinition()
    {
        return this.scheduleDefinition;
    }

    /**
     * <p><em>XML Schema Choice Warning</em></p>
     * <p>Only one of these elements may be non-null when this object is serialized:<p>
     * <ul>
     * <li><code>ScheduleDefinition</code></li>
     * <li><code>ScheduleReference</code></li>
     * <li><code>NoSchedule</code></li>
     * </ul>
     * </p>
     */
    public void setScheduleDefinition(_ScheduleDefinition value)
    {
        this.scheduleDefinition = value;
    }

    public _ScheduleReference getScheduleReference()
    {
        return this.scheduleReference;
    }

    /**
     * <p><em>XML Schema Choice Warning</em></p>
     * <p>Only one of these elements may be non-null when this object is serialized:<p>
     * <ul>
     * <li><code>ScheduleDefinition</code></li>
     * <li><code>ScheduleReference</code></li>
     * <li><code>NoSchedule</code></li>
     * </ul>
     * </p>
     */
    public void setScheduleReference(_ScheduleReference value)
    {
        this.scheduleReference = value;
    }

    public _NoSchedule getNoSchedule()
    {
        return this.noSchedule;
    }

    /**
     * <p><em>XML Schema Choice Warning</em></p>
     * <p>Only one of these elements may be non-null when this object is serialized:<p>
     * <ul>
     * <li><code>ScheduleDefinition</code></li>
     * <li><code>ScheduleReference</code></li>
     * <li><code>NoSchedule</code></li>
     * </ul>
     * </p>
     */
    public void setNoSchedule(_NoSchedule value)
    {
        this.noSchedule = value;
    }

    public void readFromElement(final XMLStreamReader reader)
        throws XMLStreamException
    {
        String localName;

        // This object uses no attributes

        // Elements
        int event;

        do
        {
            event = reader.next();

            if (event == XMLStreamConstants.START_ELEMENT)
            {
                localName = reader.getLocalName();

                if (localName.equalsIgnoreCase("EnableManualSnapshotCreation"))
                {
                    this.enableManualSnapshotCreation = XMLConvert.toBoolean(reader.getElementText());
                }
                else if (localName.equalsIgnoreCase("KeepExecutionSnapshots"))
                {
                    this.keepExecutionSnapshots = XMLConvert.toBoolean(reader.getElementText());
                }
                else if (localName.equalsIgnoreCase("ScheduleDefinition"))
                {
                    this.scheduleDefinition = new _ScheduleDefinition();
                    this.scheduleDefinition.readFromElement(reader);
                }
                else if (localName.equalsIgnoreCase("ScheduleReference"))
                {
                    this.scheduleReference = new _ScheduleReference();
                    this.scheduleReference.readFromElement(reader);
                }
                else if (localName.equalsIgnoreCase("NoSchedule"))
                {
                    this.noSchedule = new _NoSchedule();
                    this.noSchedule.readFromElement(reader);
                }
                else
                {
                    // Read the unknown child element until its end
                    XMLStreamReaderHelper.readUntilElementEnd(reader);
                }
            }
        }
        while (event != XMLStreamConstants.END_ELEMENT);
    }
}
