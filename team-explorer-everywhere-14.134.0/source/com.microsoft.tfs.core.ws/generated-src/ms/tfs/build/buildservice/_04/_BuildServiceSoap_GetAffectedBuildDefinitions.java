// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See License.txt in the repository root.

 /*
 * This file was automatically generated by com.microsoft.tfs.core.ws.generator.Generator
 * from the /complexType.vm template.
 */
package ms.tfs.build.buildservice._04;

import com.microsoft.tfs.core.ws.runtime.*;
import com.microsoft.tfs.core.ws.runtime.serialization.*;
import com.microsoft.tfs.core.ws.runtime.types.*;
import com.microsoft.tfs.core.ws.runtime.util.*;
import com.microsoft.tfs.core.ws.runtime.xml.*;

import ms.tfs.build.buildservice._04._BuildServiceSoap_GetAffectedBuildDefinitions;
import ms.tfs.build.buildservice._04._DefinitionTriggerType;

import java.lang.String;

import java.util.ArrayList;
import java.util.List;

import javax.xml.stream.XMLStreamConstants;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.XMLStreamWriter;

/**
 * Automatically generated complex type class.
 */
public class _BuildServiceSoap_GetAffectedBuildDefinitions
    implements ElementSerializable
{
    // No attributes    

    // Elements
    protected String[] serverItems;
    protected _DefinitionTriggerType continuousIntegrationType;

    public _BuildServiceSoap_GetAffectedBuildDefinitions()
    {
        super();
    }

    public _BuildServiceSoap_GetAffectedBuildDefinitions(
        final String[] serverItems,
        final _DefinitionTriggerType continuousIntegrationType)
    {
        // TODO : Call super() instead of setting all fields directly?
        setServerItems(serverItems);
        setContinuousIntegrationType(continuousIntegrationType);
    }

    public String[] getServerItems()
    {
        return this.serverItems;
    }

    public void setServerItems(String[] value)
    {
        this.serverItems = value;
    }

    public _DefinitionTriggerType getContinuousIntegrationType()
    {
        return this.continuousIntegrationType;
    }

    public void setContinuousIntegrationType(_DefinitionTriggerType value)
    {
        if (value == null)
        {
            throw new IllegalArgumentException(
                    "'continuousIntegrationType' is a required element, its value cannot be null");
        }

        this.continuousIntegrationType = value;
    }

    public void writeAsElement(
        final XMLStreamWriter writer,
        final String name)
        throws XMLStreamException
    {
        writer.writeStartElement(name);

        // Elements
        if (this.serverItems != null)
        {
            /*
             * The element type is an array.
             */
            writer.writeStartElement("serverItems");

            for (int iterator0 = 0; iterator0 < this.serverItems.length; iterator0++)
            {
                XMLStreamWriterHelper.writeElement(
                    writer,
                    "string",
                    this.serverItems[iterator0]);
            }

            writer.writeEndElement();
        }

        this.continuousIntegrationType.writeAsElement(
            writer,
            "continuousIntegrationType");

        writer.writeEndElement();
    }
}
