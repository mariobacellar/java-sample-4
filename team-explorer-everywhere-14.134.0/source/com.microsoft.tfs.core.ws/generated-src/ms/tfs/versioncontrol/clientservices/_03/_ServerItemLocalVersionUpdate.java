// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See License.txt in the repository root.

 /*
 * This file was automatically generated by com.microsoft.tfs.core.ws.generator.Generator
 * from the /complexType.vm template.
 */
package ms.tfs.versioncontrol.clientservices._03;

import com.microsoft.tfs.core.ws.runtime.*;
import com.microsoft.tfs.core.ws.runtime.serialization.*;
import com.microsoft.tfs.core.ws.runtime.types.*;
import com.microsoft.tfs.core.ws.runtime.util.*;
import com.microsoft.tfs.core.ws.runtime.xml.*;

import ms.tfs.versioncontrol.clientservices._03._ServerItemLocalVersionUpdate;

import java.lang.String;

import java.util.ArrayList;
import java.util.List;

import javax.xml.stream.XMLStreamConstants;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.XMLStreamWriter;

/**
 * Automatically generated complex type class.
 */
public class _ServerItemLocalVersionUpdate
    extends _BaseLocalVersionUpdate
    implements ElementSerializable, ElementDeserializable
{
    // Attributes
    protected String sitem;
    protected int itemid = 0;

    // No elements    
    public _ServerItemLocalVersionUpdate()
    {
        super();
    }

    public _ServerItemLocalVersionUpdate(
        final String tlocal,
        final int lver,
        final String sitem,
        final int itemid)
    {
        // TODO : Call super() instead of setting all fields directly?
        setTlocal(tlocal);
        setLver(lver);
        setSitem(sitem);
        setItemid(itemid);
    }

    public String getSitem()
    {
        return this.sitem;
    }

    public void setSitem(final String value)
    {
        this.sitem = value;
    }

    public int getItemid()
    {
        return this.itemid;
    }

    public void setItemid(final int value)
    {
        this.itemid = value;
    }

    public void writeAsElement(
        final XMLStreamWriter writer,
        final String name)
        throws XMLStreamException
    {
        writer.writeStartElement(name);

        // Declare our type
        writer.writeAttribute(
            "xsi",
            "http://www.w3.org/2001/XMLSchema-instance",
            "type",
            "ServerItemLocalVersionUpdate");

        // Attributes
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "tlocal",
            this.tlocal);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "lver",
            this.lver);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "sitem",
            this.sitem);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "itemid",
            this.itemid);

        writer.writeEndElement();
    }

    public void readFromElement(final XMLStreamReader reader)
        throws XMLStreamException
    {
        String localName;

        // Attributes
        final int attributeCount = reader.getAttributeCount();
        String attributeValue;

        for (int i = 0; i < attributeCount; i++)
        {
            localName = reader.getAttributeLocalName(i);
            attributeValue = reader.getAttributeValue(i);

            if (localName.equalsIgnoreCase("tlocal"))
            {
                this.tlocal = attributeValue;
            }
            else if (localName.equalsIgnoreCase("lver"))
            {
                this.lver = XMLConvert.toInt(attributeValue);
            }
            else if (localName.equalsIgnoreCase("sitem"))
            {
                this.sitem = attributeValue;
            }
            else if (localName.equalsIgnoreCase("itemid"))
            {
                this.itemid = XMLConvert.toInt(attributeValue);
            }

            // Ignore unknown attributes.
        }

        // This object uses no elements, so read until our element end
        XMLStreamReaderHelper.readUntilElementEnd(reader);
    }
}
