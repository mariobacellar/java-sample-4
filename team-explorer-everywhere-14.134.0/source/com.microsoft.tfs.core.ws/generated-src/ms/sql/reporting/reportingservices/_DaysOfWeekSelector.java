// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See License.txt in the repository root.

 /*
 * This file was automatically generated by com.microsoft.tfs.core.ws.generator.Generator
 * from the /complexType.vm template.
 */
package ms.sql.reporting.reportingservices;

import com.microsoft.tfs.core.ws.runtime.*;
import com.microsoft.tfs.core.ws.runtime.serialization.*;
import com.microsoft.tfs.core.ws.runtime.types.*;
import com.microsoft.tfs.core.ws.runtime.util.*;
import com.microsoft.tfs.core.ws.runtime.xml.*;

import ms.sql.reporting.reportingservices._DaysOfWeekSelector;

import java.util.ArrayList;
import java.util.List;

import javax.xml.stream.XMLStreamConstants;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.XMLStreamWriter;

/**
 * Automatically generated complex type class.
 */
public class _DaysOfWeekSelector
    implements ElementSerializable, ElementDeserializable
{
    // No attributes    

    // Elements
    protected boolean sunday;
    protected boolean monday;
    protected boolean tuesday;
    protected boolean wednesday;
    protected boolean thursday;
    protected boolean friday;
    protected boolean saturday;

    public _DaysOfWeekSelector()
    {
        super();
    }

    public _DaysOfWeekSelector(
        final boolean sunday,
        final boolean monday,
        final boolean tuesday,
        final boolean wednesday,
        final boolean thursday,
        final boolean friday,
        final boolean saturday)
    {
        // TODO : Call super() instead of setting all fields directly?
        setSunday(sunday);
        setMonday(monday);
        setTuesday(tuesday);
        setWednesday(wednesday);
        setThursday(thursday);
        setFriday(friday);
        setSaturday(saturday);
    }

    public boolean isSunday()
    {
        return this.sunday;
    }

    public void setSunday(boolean value)
    {
        this.sunday = value;
    }

    public boolean isMonday()
    {
        return this.monday;
    }

    public void setMonday(boolean value)
    {
        this.monday = value;
    }

    public boolean isTuesday()
    {
        return this.tuesday;
    }

    public void setTuesday(boolean value)
    {
        this.tuesday = value;
    }

    public boolean isWednesday()
    {
        return this.wednesday;
    }

    public void setWednesday(boolean value)
    {
        this.wednesday = value;
    }

    public boolean isThursday()
    {
        return this.thursday;
    }

    public void setThursday(boolean value)
    {
        this.thursday = value;
    }

    public boolean isFriday()
    {
        return this.friday;
    }

    public void setFriday(boolean value)
    {
        this.friday = value;
    }

    public boolean isSaturday()
    {
        return this.saturday;
    }

    public void setSaturday(boolean value)
    {
        this.saturday = value;
    }

    public void writeAsElement(
        final XMLStreamWriter writer,
        final String name)
        throws XMLStreamException
    {
        writer.writeStartElement(name);

        // Elements
        XMLStreamWriterHelper.writeElement(
            writer,
            "Sunday",
            this.sunday);
        XMLStreamWriterHelper.writeElement(
            writer,
            "Monday",
            this.monday);
        XMLStreamWriterHelper.writeElement(
            writer,
            "Tuesday",
            this.tuesday);
        XMLStreamWriterHelper.writeElement(
            writer,
            "Wednesday",
            this.wednesday);
        XMLStreamWriterHelper.writeElement(
            writer,
            "Thursday",
            this.thursday);
        XMLStreamWriterHelper.writeElement(
            writer,
            "Friday",
            this.friday);
        XMLStreamWriterHelper.writeElement(
            writer,
            "Saturday",
            this.saturday);

        writer.writeEndElement();
    }

    public void readFromElement(final XMLStreamReader reader)
        throws XMLStreamException
    {
        String localName;

        // This object uses no attributes

        // Elements
        int event;

        do
        {
            event = reader.next();

            if (event == XMLStreamConstants.START_ELEMENT)
            {
                localName = reader.getLocalName();

                if (localName.equalsIgnoreCase("Sunday"))
                {
                    this.sunday = XMLConvert.toBoolean(reader.getElementText());
                }
                else if (localName.equalsIgnoreCase("Monday"))
                {
                    this.monday = XMLConvert.toBoolean(reader.getElementText());
                }
                else if (localName.equalsIgnoreCase("Tuesday"))
                {
                    this.tuesday = XMLConvert.toBoolean(reader.getElementText());
                }
                else if (localName.equalsIgnoreCase("Wednesday"))
                {
                    this.wednesday = XMLConvert.toBoolean(reader.getElementText());
                }
                else if (localName.equalsIgnoreCase("Thursday"))
                {
                    this.thursday = XMLConvert.toBoolean(reader.getElementText());
                }
                else if (localName.equalsIgnoreCase("Friday"))
                {
                    this.friday = XMLConvert.toBoolean(reader.getElementText());
                }
                else if (localName.equalsIgnoreCase("Saturday"))
                {
                    this.saturday = XMLConvert.toBoolean(reader.getElementText());
                }
                else
                {
                    // Read the unknown child element until its end
                    XMLStreamReaderHelper.readUntilElementEnd(reader);
                }
            }
        }
        while (event != XMLStreamConstants.END_ELEMENT);
    }
}
