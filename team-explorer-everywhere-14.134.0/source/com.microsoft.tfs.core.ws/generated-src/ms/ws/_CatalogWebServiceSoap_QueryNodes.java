// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See License.txt in the repository root.

 /*
 * This file was automatically generated by com.microsoft.tfs.core.ws.generator.Generator
 * from the /complexType.vm template.
 */
package ms.ws;

import com.microsoft.tfs.core.ws.runtime.*;
import com.microsoft.tfs.core.ws.runtime.serialization.*;
import com.microsoft.tfs.core.ws.runtime.types.*;
import com.microsoft.tfs.core.ws.runtime.util.*;
import com.microsoft.tfs.core.ws.runtime.xml.*;

import ms.ws._CatalogWebServiceSoap_QueryNodes;
import ms.ws._KeyValueOfStringString;

import java.lang.String;

import java.util.ArrayList;
import java.util.List;

import javax.xml.stream.XMLStreamConstants;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.XMLStreamWriter;

/**
 * Automatically generated complex type class.
 */
public class _CatalogWebServiceSoap_QueryNodes
    implements ElementSerializable
{
    // No attributes    

    // Elements
    protected String[] pathSpecs;
    protected String[] resourceTypeFilters;
    protected _KeyValueOfStringString[] propertyFilters;
    protected int queryOptions;

    public _CatalogWebServiceSoap_QueryNodes()
    {
        super();
    }

    public _CatalogWebServiceSoap_QueryNodes(
        final String[] pathSpecs,
        final String[] resourceTypeFilters,
        final _KeyValueOfStringString[] propertyFilters,
        final int queryOptions)
    {
        // TODO : Call super() instead of setting all fields directly?
        setPathSpecs(pathSpecs);
        setResourceTypeFilters(resourceTypeFilters);
        setPropertyFilters(propertyFilters);
        setQueryOptions(queryOptions);
    }

    public String[] getPathSpecs()
    {
        return this.pathSpecs;
    }

    public void setPathSpecs(String[] value)
    {
        this.pathSpecs = value;
    }

    public String[] getResourceTypeFilters()
    {
        return this.resourceTypeFilters;
    }

    public void setResourceTypeFilters(String[] value)
    {
        this.resourceTypeFilters = value;
    }

    public _KeyValueOfStringString[] getPropertyFilters()
    {
        return this.propertyFilters;
    }

    public void setPropertyFilters(_KeyValueOfStringString[] value)
    {
        this.propertyFilters = value;
    }

    public int getQueryOptions()
    {
        return this.queryOptions;
    }

    public void setQueryOptions(int value)
    {
        this.queryOptions = value;
    }

    public void writeAsElement(
        final XMLStreamWriter writer,
        final String name)
        throws XMLStreamException
    {
        writer.writeStartElement(name);

        // Elements
        if (this.pathSpecs != null)
        {
            /*
             * The element type is an array.
             */
            writer.writeStartElement("pathSpecs");

            for (int iterator0 = 0; iterator0 < this.pathSpecs.length; iterator0++)
            {
                XMLStreamWriterHelper.writeElement(
                    writer,
                    "string",
                    this.pathSpecs[iterator0]);
            }

            writer.writeEndElement();
        }

        if (this.resourceTypeFilters != null)
        {
            /*
             * The element type is an array.
             */
            writer.writeStartElement("resourceTypeFilters");

            for (int iterator0 = 0; iterator0 < this.resourceTypeFilters.length; iterator0++)
            {
                XMLStreamWriterHelper.writeElement(
                    writer,
                    "guid",
                    this.resourceTypeFilters[iterator0]);
            }

            writer.writeEndElement();
        }

        if (this.propertyFilters != null)
        {
            /*
             * The element type is an array.
             */
            writer.writeStartElement("propertyFilters");

            for (int iterator0 = 0; iterator0 < this.propertyFilters.length; iterator0++)
            {
                this.propertyFilters[iterator0].writeAsElement(
                    writer,
                    "KeyValueOfStringString");
            }

            writer.writeEndElement();
        }

        XMLStreamWriterHelper.writeElement(
            writer,
            "queryOptions",
            this.queryOptions);

        writer.writeEndElement();
    }
}
