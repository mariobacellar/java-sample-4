// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See License.txt in the repository root.

 /*
 * This file was automatically generated by com.microsoft.tfs.core.ws.generator.Generator
 * from the /serviceInterface.vm template.
 */
package ms.tfs.services.authorization._03;

import com.microsoft.tfs.core.ws.runtime.exceptions.*;
import com.microsoft.tfs.core.ws.runtime.types.*;

import ms.tfs.services.authorization._03._AccessControlEntry;
import ms.tfs.services.authorization._03._AuthorizationServiceSoap_AddAccessControlEntry;
import ms.tfs.services.authorization._03._AuthorizationServiceSoap_AddAccessControlEntryResponse;
import ms.tfs.services.authorization._03._AuthorizationServiceSoap_CheckPermission;
import ms.tfs.services.authorization._03._AuthorizationServiceSoap_CheckPermissionResponse;
import ms.tfs.services.authorization._03._AuthorizationServiceSoap_GetChangedAccessControlEntries;
import ms.tfs.services.authorization._03._AuthorizationServiceSoap_GetChangedAccessControlEntriesResponse;
import ms.tfs.services.authorization._03._AuthorizationServiceSoap_GetObjectClass;
import ms.tfs.services.authorization._03._AuthorizationServiceSoap_GetObjectClassResponse;
import ms.tfs.services.authorization._03._AuthorizationServiceSoap_IsPermittedByActionList;
import ms.tfs.services.authorization._03._AuthorizationServiceSoap_IsPermittedByActionListResponse;
import ms.tfs.services.authorization._03._AuthorizationServiceSoap_IsPermittedByObjectList;
import ms.tfs.services.authorization._03._AuthorizationServiceSoap_IsPermittedByObjectListResponse;
import ms.tfs.services.authorization._03._AuthorizationServiceSoap_IsPermittedBySidList;
import ms.tfs.services.authorization._03._AuthorizationServiceSoap_IsPermittedBySidListResponse;
import ms.tfs.services.authorization._03._AuthorizationServiceSoap_ListLocalizedActionNames;
import ms.tfs.services.authorization._03._AuthorizationServiceSoap_ListLocalizedActionNamesResponse;
import ms.tfs.services.authorization._03._AuthorizationServiceSoap_ListObjectClassActions;
import ms.tfs.services.authorization._03._AuthorizationServiceSoap_ListObjectClassActionsResponse;
import ms.tfs.services.authorization._03._AuthorizationServiceSoap_ListObjectClasses;
import ms.tfs.services.authorization._03._AuthorizationServiceSoap_ListObjectClassesResponse;
import ms.tfs.services.authorization._03._AuthorizationServiceSoap_ReadAccessControlList;
import ms.tfs.services.authorization._03._AuthorizationServiceSoap_ReadAccessControlListResponse;
import ms.tfs.services.authorization._03._AuthorizationServiceSoap_ReadAccessControlLists;
import ms.tfs.services.authorization._03._AuthorizationServiceSoap_ReadAccessControlListsResponse;
import ms.tfs.services.authorization._03._AuthorizationServiceSoap_RegisterObject;
import ms.tfs.services.authorization._03._AuthorizationServiceSoap_RegisterObjectResponse;
import ms.tfs.services.authorization._03._AuthorizationServiceSoap_RemoveAccessControlEntry;
import ms.tfs.services.authorization._03._AuthorizationServiceSoap_RemoveAccessControlEntryResponse;
import ms.tfs.services.authorization._03._AuthorizationServiceSoap_ReplaceAccessControlList;
import ms.tfs.services.authorization._03._AuthorizationServiceSoap_ReplaceAccessControlListResponse;
import ms.tfs.services.authorization._03._AuthorizationServiceSoap_ResetInheritance;
import ms.tfs.services.authorization._03._AuthorizationServiceSoap_ResetInheritanceResponse;
import ms.tfs.services.authorization._03._AuthorizationServiceSoap_UnregisterObject;
import ms.tfs.services.authorization._03._AuthorizationServiceSoap_UnregisterObjectResponse;

import java.lang.String;

/**
 * Automatically generated service interface.
 *
 * {http://schemas.microsoft.com/TeamFoundation/2005/06/Services/Authorization/03}AuthorizationServiceSoap
 */
public interface _AuthorizationServiceSoap
{
    public void registerObject(
        final String objectId,
        final String objectClassId,
        final String projectUri,
        final String parentObjectId)
        throws TransportException, SOAPFault;

    public void unregisterObject(final String objectId)
        throws TransportException, SOAPFault;

    public void resetInheritance(
        final String objectId,
        final String parentObejctId)
        throws TransportException, SOAPFault;

    public String getObjectClass(final String objectId)
        throws TransportException, SOAPFault;

    public String[] listObjectClasses()
        throws TransportException, SOAPFault;

    public String[] listObjectClassActions(final String objectClassId)
        throws TransportException, SOAPFault;

    public String[] listLocalizedActionNames(
        final String objectClassId,
        final String[] actionId)
        throws TransportException, SOAPFault;

    public void addAccessControlEntry(
        final String objectId,
        final _AccessControlEntry ace)
        throws TransportException, SOAPFault;

    public void removeAccessControlEntry(
        final String objectId,
        final _AccessControlEntry ace)
        throws TransportException, SOAPFault;

    public String getChangedAccessControlEntries(final int sequence_id)
        throws TransportException, SOAPFault;

    public void replaceAccessControlList(
        final String objectId,
        final _AccessControlEntry[] acl)
        throws TransportException, SOAPFault;

    public _AccessControlEntry[][] readAccessControlLists(final String[] objectId)
        throws TransportException, SOAPFault;

    public _AccessControlEntry[] readAccessControlList(final String objectId)
        throws TransportException, SOAPFault;

    public boolean[] isPermittedByObjectList(
        final String[] objectId,
        final String actionId,
        final String userSid)
        throws TransportException, SOAPFault;

    public boolean[] isPermittedByActionList(
        final String objectId,
        final String[] actionId,
        final String userSid)
        throws TransportException, SOAPFault;

    public boolean[] isPermittedBySidList(
        final String objectId,
        final String actionId,
        final String[] userSid)
        throws TransportException, SOAPFault;

    public void checkPermission(
        final String objectId,
        final String actionId)
        throws TransportException, SOAPFault;
}
