// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See License.txt in the repository root.

 /*
 * This file was automatically generated by com.microsoft.tfs.core.ws.generator.Generator
 * from the /complexType.vm template.
 */
package ms.sql.reporting.reportingservices;

import com.microsoft.tfs.core.ws.runtime.*;
import com.microsoft.tfs.core.ws.runtime.serialization.*;
import com.microsoft.tfs.core.ws.runtime.types.*;
import com.microsoft.tfs.core.ws.runtime.util.*;
import com.microsoft.tfs.core.ws.runtime.xml.*;

import ms.sql.reporting.reportingservices._ReportingService2005Soap_GetReportHistoryLimitResponse;

import java.util.ArrayList;
import java.util.List;

import javax.xml.stream.XMLStreamConstants;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.XMLStreamWriter;

/**
 * Automatically generated complex type class.
 */
public class _ReportingService2005Soap_GetReportHistoryLimitResponse
    implements ElementDeserializable
{
    // No attributes    

    // Elements
    protected int historyLimit;
    protected boolean isSystem;
    protected int systemLimit;

    public _ReportingService2005Soap_GetReportHistoryLimitResponse()
    {
        super();
    }

    public _ReportingService2005Soap_GetReportHistoryLimitResponse(
        final int historyLimit,
        final boolean isSystem,
        final int systemLimit)
    {
        // TODO : Call super() instead of setting all fields directly?
        setHistoryLimit(historyLimit);
        setIsSystem(isSystem);
        setSystemLimit(systemLimit);
    }

    public int getHistoryLimit()
    {
        return this.historyLimit;
    }

    public void setHistoryLimit(int value)
    {
        this.historyLimit = value;
    }

    public boolean isIsSystem()
    {
        return this.isSystem;
    }

    public void setIsSystem(boolean value)
    {
        this.isSystem = value;
    }

    public int getSystemLimit()
    {
        return this.systemLimit;
    }

    public void setSystemLimit(int value)
    {
        this.systemLimit = value;
    }

    public void readFromElement(final XMLStreamReader reader)
        throws XMLStreamException
    {
        String localName;

        // This object uses no attributes

        // Elements
        int event;

        do
        {
            event = reader.next();

            if (event == XMLStreamConstants.START_ELEMENT)
            {
                localName = reader.getLocalName();

                if (localName.equalsIgnoreCase("HistoryLimit"))
                {
                    this.historyLimit = XMLConvert.toInt(reader.getElementText());
                }
                else if (localName.equalsIgnoreCase("IsSystem"))
                {
                    this.isSystem = XMLConvert.toBoolean(reader.getElementText());
                }
                else if (localName.equalsIgnoreCase("SystemLimit"))
                {
                    this.systemLimit = XMLConvert.toInt(reader.getElementText());
                }
                else
                {
                    // Read the unknown child element until its end
                    XMLStreamReaderHelper.readUntilElementEnd(reader);
                }
            }
        }
        while (event != XMLStreamConstants.END_ELEMENT);
    }
}
