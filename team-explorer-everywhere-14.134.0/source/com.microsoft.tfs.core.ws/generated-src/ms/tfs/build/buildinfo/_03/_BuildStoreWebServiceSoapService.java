// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See License.txt in the repository root.

 /*
 * This file was automatically generated by com.microsoft.tfs.core.ws.generator.Generator
 * from the /serviceImplementation.vm template.
 */
package ms.tfs.build.buildinfo._03;

import com.microsoft.tfs.core.httpclient.HttpClient;
import com.microsoft.tfs.core.ws.runtime.client.*;
import com.microsoft.tfs.core.ws.runtime.exceptions.*;
import com.microsoft.tfs.core.ws.runtime.serialization.*;
import com.microsoft.tfs.core.ws.runtime.types.*;

import ms.tfs.build.buildinfo._03._BuildData;
import ms.tfs.build.buildinfo._03._BuildStepData;
import ms.tfs.build.buildinfo._03._BuildStepStatus;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_AddBuild;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_AddBuildResponse;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_AddBuildStep;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_AddBuildStepResponse;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_AddChangeSetsForBuild;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_AddChangeSetsForBuildResponse;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_AddOpenedWorkItemsForBuild;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_AddOpenedWorkItemsForBuildResponse;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_AddPlatformFlavorLogForBuild;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_AddPlatformFlavorLogForBuildResponse;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_AddProjectDetailsForBuild;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_AddProjectDetailsForBuildResponse;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_AddWorkItemsForBuild;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_AddWorkItemsForBuildResponse;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_GetBuildDetails;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_GetBuildDetailsResponse;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_GetBuildQualities;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_GetBuildQualitiesResponse;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_GetBuildSteps;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_GetBuildStepsResponse;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_GetBuildUri;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_GetBuildUriResponse;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_GetChangeSetsForBuild;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_GetChangeSetsForBuildResponse;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_GetCodeCoverageForBuild;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_GetCodeCoverageForBuildResponse;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_GetCodeCoverageStatusForBuild;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_GetCodeCoverageStatusForBuildResponse;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_GetCompilationSummaryForBuild;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_GetCompilationSummaryForBuildResponse;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_GetListOfBuilds;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_GetListOfBuildsResponse;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_GetOpenedWorkItemsForBuild;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_GetOpenedWorkItemsForBuildResponse;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_GetPlatformFlavorsForBuild;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_GetPlatformFlavorsForBuildResponse;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_GetTestResultsForBuild;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_GetTestResultsForBuildResponse;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_GetWorkItemsForBuild;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_GetWorkItemsForBuildResponse;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_UpdateBuildFinishTime;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_UpdateBuildFinishTimeResponse;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_UpdateBuildFlag;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_UpdateBuildFlagResponse;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_UpdateBuildLogLocation;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_UpdateBuildLogLocationResponse;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_UpdateBuildNumberAndDropLocation;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_UpdateBuildNumberAndDropLocationResponse;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_UpdateBuildQuality;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_UpdateBuildQualityResponse;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_UpdateBuildStatus;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_UpdateBuildStatusResponse;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_UpdateBuildStep;
import ms.tfs.build.buildinfo._03._BuildStoreWebServiceSoap_UpdateBuildStepResponse;
import ms.tfs.build.buildinfo._03._ChangeSetData;
import ms.tfs.build.buildinfo._03._CodeCoverageData;
import ms.tfs.build.buildinfo._03._CodeCoverageStatus;
import ms.tfs.build.buildinfo._03._CompilationSummaryData;
import ms.tfs.build.buildinfo._03._PlatformFlavorData;
import ms.tfs.build.buildinfo._03._ProjectData;
import ms.tfs.build.buildinfo._03._TestResultData;
import ms.tfs.build.buildinfo._03._WorkItemData;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

import java.lang.String;

import java.net.URI;

import java.util.Calendar;

import javax.xml.namespace.QName;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.XMLStreamWriter;

/**
 * Automatically generated service interface.
 *
 * {http://schemas.microsoft.com/TeamFoundation/2005/06/Build/BuildInfo/03}BuildStoreWebServiceSoapService
 */
public class _BuildStoreWebServiceSoapService
    extends SOAP11Service
    implements _BuildStoreWebServiceSoap
{
    private static final QName PORT_QNAME = new QName(
                "http://schemas.microsoft.com/TeamFoundation/2005/06/Build/BuildInfo/03",
                "BuildStoreWebServiceSoapService");
    private static final String ENDPOINT_PATH = "/tfs/DefaultCollection/Build/v1.0/BuildStore.asmx";

    public _BuildStoreWebServiceSoapService(
        final URI endpoint,
        final QName port)
    {
        super(endpoint, port);
    }

    public _BuildStoreWebServiceSoapService(
        final HttpClient client,
        URI endpoint,
        QName port)
    {
        super(client, endpoint, port);
    }

    /**
     * @return the qualified name of the WSDL port this service implementation can be used with
     */
    public static QName getPortQName()
    {
        return _BuildStoreWebServiceSoapService.PORT_QNAME;
    }

    /**
     * @return the path part to use when constructing a URI to contact a host that provides this service
     */
    public static String getEndpointPath()
    {
        return _BuildStoreWebServiceSoapService.ENDPOINT_PATH;
    }

    public String getBuildUri(
        final String teamProject,
        final String buildNumber)
        throws TransportException, SOAPFault
    {
        final _BuildStoreWebServiceSoap_GetBuildUri requestData = new _BuildStoreWebServiceSoap_GetBuildUri(teamProject,
                buildNumber);

        final SOAPRequest request = createSOAPRequest(
                "GetBuildUri",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetBuildUri");
                    }
                });

        final _BuildStoreWebServiceSoap_GetBuildUriResponse responseData = new _BuildStoreWebServiceSoap_GetBuildUriResponse();

        executeSOAPRequest(
            request,
            "GetBuildUriResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getGetBuildUriResult();
    }

    public _BuildData[] getListOfBuilds(
        final String teamProject,
        final String buildType)
        throws TransportException, SOAPFault
    {
        final _BuildStoreWebServiceSoap_GetListOfBuilds requestData = new _BuildStoreWebServiceSoap_GetListOfBuilds(
                    teamProject,
                    buildType);

        final SOAPRequest request = createSOAPRequest(
                "GetListOfBuilds",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetListOfBuilds");
                    }
                });

        final _BuildStoreWebServiceSoap_GetListOfBuildsResponse responseData = new _BuildStoreWebServiceSoap_GetListOfBuildsResponse();

        executeSOAPRequest(
            request,
            "GetListOfBuildsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getGetListOfBuildsResult();
    }

    public _BuildData getBuildDetails(final String buildUri)
        throws TransportException, SOAPFault
    {
        final _BuildStoreWebServiceSoap_GetBuildDetails requestData = new _BuildStoreWebServiceSoap_GetBuildDetails(
                    buildUri);

        final SOAPRequest request = createSOAPRequest(
                "GetBuildDetails",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetBuildDetails");
                    }
                });

        final _BuildStoreWebServiceSoap_GetBuildDetailsResponse responseData = new _BuildStoreWebServiceSoap_GetBuildDetailsResponse();

        executeSOAPRequest(
            request,
            "GetBuildDetailsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getGetBuildDetailsResult();
    }

    public String[] getBuildQualities()
        throws TransportException, SOAPFault
    {
        final _BuildStoreWebServiceSoap_GetBuildQualities requestData = new _BuildStoreWebServiceSoap_GetBuildQualities();

        final SOAPRequest request = createSOAPRequest(
                "GetBuildQualities",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetBuildQualities");
                    }
                });

        final _BuildStoreWebServiceSoap_GetBuildQualitiesResponse responseData = new _BuildStoreWebServiceSoap_GetBuildQualitiesResponse();

        executeSOAPRequest(
            request,
            "GetBuildQualitiesResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getGetBuildQualitiesResult();
    }

    public _PlatformFlavorData[] getPlatformFlavorsForBuild(final String buildUri)
        throws TransportException, SOAPFault
    {
        final _BuildStoreWebServiceSoap_GetPlatformFlavorsForBuild requestData = new _BuildStoreWebServiceSoap_GetPlatformFlavorsForBuild(
                    buildUri);

        final SOAPRequest request = createSOAPRequest(
                "GetPlatformFlavorsForBuild",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetPlatformFlavorsForBuild");
                    }
                });

        final _BuildStoreWebServiceSoap_GetPlatformFlavorsForBuildResponse responseData = new _BuildStoreWebServiceSoap_GetPlatformFlavorsForBuildResponse();

        executeSOAPRequest(
            request,
            "GetPlatformFlavorsForBuildResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getGetPlatformFlavorsForBuildResult();
    }

    public _ChangeSetData[] getChangeSetsForBuild(final String buildUri)
        throws TransportException, SOAPFault
    {
        final _BuildStoreWebServiceSoap_GetChangeSetsForBuild requestData = new _BuildStoreWebServiceSoap_GetChangeSetsForBuild(
                    buildUri);

        final SOAPRequest request = createSOAPRequest(
                "GetChangeSetsForBuild",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetChangeSetsForBuild");
                    }
                });

        final _BuildStoreWebServiceSoap_GetChangeSetsForBuildResponse responseData = new _BuildStoreWebServiceSoap_GetChangeSetsForBuildResponse();

        executeSOAPRequest(
            request,
            "GetChangeSetsForBuildResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getGetChangeSetsForBuildResult();
    }

    public _WorkItemData[] getWorkItemsForBuild(final String buildUri)
        throws TransportException, SOAPFault
    {
        final _BuildStoreWebServiceSoap_GetWorkItemsForBuild requestData = new _BuildStoreWebServiceSoap_GetWorkItemsForBuild(
                    buildUri);

        final SOAPRequest request = createSOAPRequest(
                "GetWorkItemsForBuild",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetWorkItemsForBuild");
                    }
                });

        final _BuildStoreWebServiceSoap_GetWorkItemsForBuildResponse responseData = new _BuildStoreWebServiceSoap_GetWorkItemsForBuildResponse();

        executeSOAPRequest(
            request,
            "GetWorkItemsForBuildResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getGetWorkItemsForBuildResult();
    }

    public _WorkItemData[] getOpenedWorkItemsForBuild(final String buildUri)
        throws TransportException, SOAPFault
    {
        final _BuildStoreWebServiceSoap_GetOpenedWorkItemsForBuild requestData = new _BuildStoreWebServiceSoap_GetOpenedWorkItemsForBuild(
                    buildUri);

        final SOAPRequest request = createSOAPRequest(
                "GetOpenedWorkItemsForBuild",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetOpenedWorkItemsForBuild");
                    }
                });

        final _BuildStoreWebServiceSoap_GetOpenedWorkItemsForBuildResponse responseData = new _BuildStoreWebServiceSoap_GetOpenedWorkItemsForBuildResponse();

        executeSOAPRequest(
            request,
            "GetOpenedWorkItemsForBuildResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getGetOpenedWorkItemsForBuildResult();
    }

    public _TestResultData[] getTestResultsForBuild(
        final String buildUri,
        final String platform,
        final String flavor)
        throws TransportException, SOAPFault
    {
        final _BuildStoreWebServiceSoap_GetTestResultsForBuild requestData = new _BuildStoreWebServiceSoap_GetTestResultsForBuild(
                    buildUri,
                    platform,
                    flavor);

        final SOAPRequest request = createSOAPRequest(
                "GetTestResultsForBuild",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetTestResultsForBuild");
                    }
                });

        final _BuildStoreWebServiceSoap_GetTestResultsForBuildResponse responseData = new _BuildStoreWebServiceSoap_GetTestResultsForBuildResponse();

        executeSOAPRequest(
            request,
            "GetTestResultsForBuildResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getGetTestResultsForBuildResult();
    }

    public _CodeCoverageData[] getCodeCoverageForBuild(
        final String buildUri,
        final String platform,
        final String flavor)
        throws TransportException, SOAPFault
    {
        final _BuildStoreWebServiceSoap_GetCodeCoverageForBuild requestData = new _BuildStoreWebServiceSoap_GetCodeCoverageForBuild(
                    buildUri,
                    platform,
                    flavor);

        final SOAPRequest request = createSOAPRequest(
                "GetCodeCoverageForBuild",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetCodeCoverageForBuild");
                    }
                });

        final _BuildStoreWebServiceSoap_GetCodeCoverageForBuildResponse responseData = new _BuildStoreWebServiceSoap_GetCodeCoverageForBuildResponse();

        executeSOAPRequest(
            request,
            "GetCodeCoverageForBuildResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getGetCodeCoverageForBuildResult();
    }

    public _CodeCoverageStatus getCodeCoverageStatusForBuild(
        final String buildUri,
        final String platform,
        final String flavor)
        throws TransportException, SOAPFault
    {
        final _BuildStoreWebServiceSoap_GetCodeCoverageStatusForBuild requestData = new _BuildStoreWebServiceSoap_GetCodeCoverageStatusForBuild(
                    buildUri,
                    platform,
                    flavor);

        final SOAPRequest request = createSOAPRequest(
                "GetCodeCoverageStatusForBuild",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetCodeCoverageStatusForBuild");
                    }
                });

        final _BuildStoreWebServiceSoap_GetCodeCoverageStatusForBuildResponse responseData = new _BuildStoreWebServiceSoap_GetCodeCoverageStatusForBuildResponse();

        executeSOAPRequest(
            request,
            "GetCodeCoverageStatusForBuildResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getGetCodeCoverageStatusForBuildResult();
    }

    public void updateBuildQuality(
        final String buildUri,
        final String buildQuality)
        throws TransportException, SOAPFault
    {
        final _BuildStoreWebServiceSoap_UpdateBuildQuality requestData = new _BuildStoreWebServiceSoap_UpdateBuildQuality(
                    buildUri,
                    buildQuality);

        final SOAPRequest request = createSOAPRequest(
                "UpdateBuildQuality",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "UpdateBuildQuality");
                    }
                });

        final _BuildStoreWebServiceSoap_UpdateBuildQualityResponse responseData = new _BuildStoreWebServiceSoap_UpdateBuildQualityResponse();

        executeSOAPRequest(
            request,
            "UpdateBuildQualityResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }

    public _CompilationSummaryData getCompilationSummaryForBuild(
        final String buildUri,
        final String platform,
        final String flavor)
        throws TransportException, SOAPFault
    {
        final _BuildStoreWebServiceSoap_GetCompilationSummaryForBuild requestData = new _BuildStoreWebServiceSoap_GetCompilationSummaryForBuild(
                    buildUri,
                    platform,
                    flavor);

        final SOAPRequest request = createSOAPRequest(
                "GetCompilationSummaryForBuild",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetCompilationSummaryForBuild");
                    }
                });

        final _BuildStoreWebServiceSoap_GetCompilationSummaryForBuildResponse responseData = new _BuildStoreWebServiceSoap_GetCompilationSummaryForBuildResponse();

        executeSOAPRequest(
            request,
            "GetCompilationSummaryForBuildResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getGetCompilationSummaryForBuildResult();
    }

    public _BuildStepData[] getBuildSteps(final String buildUri)
        throws TransportException, SOAPFault
    {
        final _BuildStoreWebServiceSoap_GetBuildSteps requestData = new _BuildStoreWebServiceSoap_GetBuildSteps(buildUri);

        final SOAPRequest request = createSOAPRequest(
                "GetBuildSteps",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "GetBuildSteps");
                    }
                });

        final _BuildStoreWebServiceSoap_GetBuildStepsResponse responseData = new _BuildStoreWebServiceSoap_GetBuildStepsResponse();

        executeSOAPRequest(
            request,
            "GetBuildStepsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getGetBuildStepsResult();
    }

    public String addBuild(
        final String teamProject,
        final _BuildData buildData)
        throws TransportException, SOAPFault
    {
        final _BuildStoreWebServiceSoap_AddBuild requestData = new _BuildStoreWebServiceSoap_AddBuild(teamProject,
                buildData);

        final SOAPRequest request = createSOAPRequest(
                "AddBuild",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "AddBuild");
                    }
                });

        final _BuildStoreWebServiceSoap_AddBuildResponse responseData = new _BuildStoreWebServiceSoap_AddBuildResponse();

        executeSOAPRequest(
            request,
            "AddBuildResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getAddBuildResult();
    }

    public void addChangeSetsForBuild(
        final String buildUri,
        final _ChangeSetData[] changesets)
        throws TransportException, SOAPFault
    {
        final _BuildStoreWebServiceSoap_AddChangeSetsForBuild requestData = new _BuildStoreWebServiceSoap_AddChangeSetsForBuild(
                    buildUri,
                    changesets);

        final SOAPRequest request = createSOAPRequest(
                "AddChangeSetsForBuild",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "AddChangeSetsForBuild");
                    }
                });

        final _BuildStoreWebServiceSoap_AddChangeSetsForBuildResponse responseData = new _BuildStoreWebServiceSoap_AddChangeSetsForBuildResponse();

        executeSOAPRequest(
            request,
            "AddChangeSetsForBuildResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }

    public void addOpenedWorkItemsForBuild(
        final String buildUri,
        final _WorkItemData[] workItems)
        throws TransportException, SOAPFault
    {
        final _BuildStoreWebServiceSoap_AddOpenedWorkItemsForBuild requestData = new _BuildStoreWebServiceSoap_AddOpenedWorkItemsForBuild(
                    buildUri,
                    workItems);

        final SOAPRequest request = createSOAPRequest(
                "AddOpenedWorkItemsForBuild",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "AddOpenedWorkItemsForBuild");
                    }
                });

        final _BuildStoreWebServiceSoap_AddOpenedWorkItemsForBuildResponse responseData = new _BuildStoreWebServiceSoap_AddOpenedWorkItemsForBuildResponse();

        executeSOAPRequest(
            request,
            "AddOpenedWorkItemsForBuildResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }

    public void addWorkItemsForBuild(
        final String buildUri,
        final _WorkItemData[] workItems)
        throws TransportException, SOAPFault
    {
        final _BuildStoreWebServiceSoap_AddWorkItemsForBuild requestData = new _BuildStoreWebServiceSoap_AddWorkItemsForBuild(
                    buildUri,
                    workItems);

        final SOAPRequest request = createSOAPRequest(
                "AddWorkItemsForBuild",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "AddWorkItemsForBuild");
                    }
                });

        final _BuildStoreWebServiceSoap_AddWorkItemsForBuildResponse responseData = new _BuildStoreWebServiceSoap_AddWorkItemsForBuildResponse();

        executeSOAPRequest(
            request,
            "AddWorkItemsForBuildResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }

    public void updateBuildNumberAndDropLocation(
        final String buildUri,
        final String buildNumber,
        final String dropLocation)
        throws TransportException, SOAPFault
    {
        final _BuildStoreWebServiceSoap_UpdateBuildNumberAndDropLocation requestData = new _BuildStoreWebServiceSoap_UpdateBuildNumberAndDropLocation(
                    buildUri,
                    buildNumber,
                    dropLocation);

        final SOAPRequest request = createSOAPRequest(
                "UpdateBuildNumberAndDropLocation",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "UpdateBuildNumberAndDropLocation");
                    }
                });

        final _BuildStoreWebServiceSoap_UpdateBuildNumberAndDropLocationResponse responseData = new _BuildStoreWebServiceSoap_UpdateBuildNumberAndDropLocationResponse();

        executeSOAPRequest(
            request,
            "UpdateBuildNumberAndDropLocationResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }

    public void updateBuildFlag(
        final String buildUri,
        final boolean isGoodBuild)
        throws TransportException, SOAPFault
    {
        final _BuildStoreWebServiceSoap_UpdateBuildFlag requestData = new _BuildStoreWebServiceSoap_UpdateBuildFlag(
                    buildUri,
                    isGoodBuild);

        final SOAPRequest request = createSOAPRequest(
                "UpdateBuildFlag",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "UpdateBuildFlag");
                    }
                });

        final _BuildStoreWebServiceSoap_UpdateBuildFlagResponse responseData = new _BuildStoreWebServiceSoap_UpdateBuildFlagResponse();

        executeSOAPRequest(
            request,
            "UpdateBuildFlagResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }

    public void updateBuildLogLocation(
        final String buildUri,
        final String logLocation)
        throws TransportException, SOAPFault
    {
        final _BuildStoreWebServiceSoap_UpdateBuildLogLocation requestData = new _BuildStoreWebServiceSoap_UpdateBuildLogLocation(
                    buildUri,
                    logLocation);

        final SOAPRequest request = createSOAPRequest(
                "UpdateBuildLogLocation",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "UpdateBuildLogLocation");
                    }
                });

        final _BuildStoreWebServiceSoap_UpdateBuildLogLocationResponse responseData = new _BuildStoreWebServiceSoap_UpdateBuildLogLocationResponse();

        executeSOAPRequest(
            request,
            "UpdateBuildLogLocationResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }

    public void updateBuildFinishTime(
        final String buildUri,
        final Calendar finishTime)
        throws TransportException, SOAPFault
    {
        final _BuildStoreWebServiceSoap_UpdateBuildFinishTime requestData = new _BuildStoreWebServiceSoap_UpdateBuildFinishTime(
                    buildUri,
                    finishTime);

        final SOAPRequest request = createSOAPRequest(
                "UpdateBuildFinishTime",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "UpdateBuildFinishTime");
                    }
                });

        final _BuildStoreWebServiceSoap_UpdateBuildFinishTimeResponse responseData = new _BuildStoreWebServiceSoap_UpdateBuildFinishTimeResponse();

        executeSOAPRequest(
            request,
            "UpdateBuildFinishTimeResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }

    public void updateBuildStatus(
        final String buildUri,
        final String buildStatus)
        throws TransportException, SOAPFault
    {
        final _BuildStoreWebServiceSoap_UpdateBuildStatus requestData = new _BuildStoreWebServiceSoap_UpdateBuildStatus(
                    buildUri,
                    buildStatus);

        final SOAPRequest request = createSOAPRequest(
                "UpdateBuildStatus",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "UpdateBuildStatus");
                    }
                });

        final _BuildStoreWebServiceSoap_UpdateBuildStatusResponse responseData = new _BuildStoreWebServiceSoap_UpdateBuildStatusResponse();

        executeSOAPRequest(
            request,
            "UpdateBuildStatusResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }

    public void addProjectDetailsForBuild(
        final String buildUri,
        final _ProjectData project)
        throws TransportException, SOAPFault
    {
        final _BuildStoreWebServiceSoap_AddProjectDetailsForBuild requestData = new _BuildStoreWebServiceSoap_AddProjectDetailsForBuild(
                    buildUri,
                    project);

        final SOAPRequest request = createSOAPRequest(
                "AddProjectDetailsForBuild",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "AddProjectDetailsForBuild");
                    }
                });

        final _BuildStoreWebServiceSoap_AddProjectDetailsForBuildResponse responseData = new _BuildStoreWebServiceSoap_AddProjectDetailsForBuildResponse();

        executeSOAPRequest(
            request,
            "AddProjectDetailsForBuildResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }

    public long addBuildStep(
        final String buildUri,
        final String buildStepName,
        final String stepMessage,
        final Calendar startTime,
        final long parentBuildStepId)
        throws TransportException, SOAPFault
    {
        final _BuildStoreWebServiceSoap_AddBuildStep requestData = new _BuildStoreWebServiceSoap_AddBuildStep(buildUri,
                buildStepName,
                stepMessage,
                startTime,
                parentBuildStepId);

        final SOAPRequest request = createSOAPRequest(
                "AddBuildStep",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "AddBuildStep");
                    }
                });

        final _BuildStoreWebServiceSoap_AddBuildStepResponse responseData = new _BuildStoreWebServiceSoap_AddBuildStepResponse();

        executeSOAPRequest(
            request,
            "AddBuildStepResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getBuildStepId();
    }

    public void updateBuildStep(
        final String buildUri,
        final String buildStepName,
        final Calendar finishTime,
        final _BuildStepStatus status,
        final long buildStepId)
        throws TransportException, SOAPFault
    {
        final _BuildStoreWebServiceSoap_UpdateBuildStep requestData = new _BuildStoreWebServiceSoap_UpdateBuildStep(
                    buildUri,
                    buildStepName,
                    finishTime,
                    status,
                    buildStepId);

        final SOAPRequest request = createSOAPRequest(
                "UpdateBuildStep",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "UpdateBuildStep");
                    }
                });

        final _BuildStoreWebServiceSoap_UpdateBuildStepResponse responseData = new _BuildStoreWebServiceSoap_UpdateBuildStepResponse();

        executeSOAPRequest(
            request,
            "UpdateBuildStepResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }

    public void addPlatformFlavorLogForBuild(
        final String buildUri,
        final String platform,
        final String flavor,
        final String logFileName)
        throws TransportException, SOAPFault
    {
        final _BuildStoreWebServiceSoap_AddPlatformFlavorLogForBuild requestData = new _BuildStoreWebServiceSoap_AddPlatformFlavorLogForBuild(
                    buildUri,
                    platform,
                    flavor,
                    logFileName);

        final SOAPRequest request = createSOAPRequest(
                "AddPlatformFlavorLogForBuild",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "AddPlatformFlavorLogForBuild");
                    }
                });

        final _BuildStoreWebServiceSoap_AddPlatformFlavorLogForBuildResponse responseData = new _BuildStoreWebServiceSoap_AddPlatformFlavorLogForBuildResponse();

        executeSOAPRequest(
            request,
            "AddPlatformFlavorLogForBuildResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }
}
