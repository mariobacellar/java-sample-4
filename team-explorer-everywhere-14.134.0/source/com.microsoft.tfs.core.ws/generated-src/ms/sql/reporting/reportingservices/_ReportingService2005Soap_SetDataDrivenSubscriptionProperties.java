// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See License.txt in the repository root.

 /*
 * This file was automatically generated by com.microsoft.tfs.core.ws.generator.Generator
 * from the /complexType.vm template.
 */
package ms.sql.reporting.reportingservices;

import com.microsoft.tfs.core.ws.runtime.*;
import com.microsoft.tfs.core.ws.runtime.serialization.*;
import com.microsoft.tfs.core.ws.runtime.types.*;
import com.microsoft.tfs.core.ws.runtime.util.*;
import com.microsoft.tfs.core.ws.runtime.xml.*;

import ms.sql.reporting.reportingservices._ArrayOfChoice1;
import ms.sql.reporting.reportingservices._CredentialRetrievalEnum;
import ms.sql.reporting.reportingservices._DataRetrievalPlan;
import ms.sql.reporting.reportingservices._DataSetDefinition;
import ms.sql.reporting.reportingservices._DataSourceDefinition;
import ms.sql.reporting.reportingservices._DataSourceReference;
import ms.sql.reporting.reportingservices._ExtensionSettings;
import ms.sql.reporting.reportingservices._Field;
import ms.sql.reporting.reportingservices._InvalidDataSourceReference;
import ms.sql.reporting.reportingservices._ParameterFieldReference;
import ms.sql.reporting.reportingservices._ParameterValue;
import ms.sql.reporting.reportingservices._ParameterValueOrFieldReference;
import ms.sql.reporting.reportingservices._QueryDefinition;
import ms.sql.reporting.reportingservices._ReportingService2005Soap_SetDataDrivenSubscriptionProperties;
import ms.sql.reporting.reportingservices._SensitivityEnum;

import java.lang.String;

import java.util.ArrayList;
import java.util.List;

import javax.xml.stream.XMLStreamConstants;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.XMLStreamWriter;

/**
 * Automatically generated complex type class.
 */
public class _ReportingService2005Soap_SetDataDrivenSubscriptionProperties
    implements ElementSerializable
{
    // No attributes    

    // Elements
    protected String dataDrivenSubscriptionID;
    protected _ExtensionSettings extensionSettings;
    protected _DataRetrievalPlan dataRetrievalPlan;
    protected String description;
    protected String eventType;
    protected String matchData;
    protected _ParameterValueOrFieldReference[] parameters;

    public _ReportingService2005Soap_SetDataDrivenSubscriptionProperties()
    {
        super();
    }

    public _ReportingService2005Soap_SetDataDrivenSubscriptionProperties(
        final String dataDrivenSubscriptionID,
        final _ExtensionSettings extensionSettings,
        final _DataRetrievalPlan dataRetrievalPlan,
        final String description,
        final String eventType,
        final String matchData,
        final _ParameterValueOrFieldReference[] parameters)
    {
        // TODO : Call super() instead of setting all fields directly?
        setDataDrivenSubscriptionID(dataDrivenSubscriptionID);
        setExtensionSettings(extensionSettings);
        setDataRetrievalPlan(dataRetrievalPlan);
        setDescription(description);
        setEventType(eventType);
        setMatchData(matchData);
        setParameters(parameters);
    }

    public String getDataDrivenSubscriptionID()
    {
        return this.dataDrivenSubscriptionID;
    }

    public void setDataDrivenSubscriptionID(String value)
    {
        this.dataDrivenSubscriptionID = value;
    }

    public _ExtensionSettings getExtensionSettings()
    {
        return this.extensionSettings;
    }

    public void setExtensionSettings(_ExtensionSettings value)
    {
        this.extensionSettings = value;
    }

    public _DataRetrievalPlan getDataRetrievalPlan()
    {
        return this.dataRetrievalPlan;
    }

    public void setDataRetrievalPlan(_DataRetrievalPlan value)
    {
        this.dataRetrievalPlan = value;
    }

    public String getDescription()
    {
        return this.description;
    }

    public void setDescription(String value)
    {
        this.description = value;
    }

    public String getEventType()
    {
        return this.eventType;
    }

    public void setEventType(String value)
    {
        this.eventType = value;
    }

    public String getMatchData()
    {
        return this.matchData;
    }

    public void setMatchData(String value)
    {
        this.matchData = value;
    }

    public _ParameterValueOrFieldReference[] getParameters()
    {
        return this.parameters;
    }

    public void setParameters(_ParameterValueOrFieldReference[] value)
    {
        this.parameters = value;
    }

    public void writeAsElement(
        final XMLStreamWriter writer,
        final String name)
        throws XMLStreamException
    {
        writer.writeStartElement(name);

        // Elements
        XMLStreamWriterHelper.writeElement(
            writer,
            "DataDrivenSubscriptionID",
            this.dataDrivenSubscriptionID);

        if (this.extensionSettings != null)
        {
            this.extensionSettings.writeAsElement(
                writer,
                "ExtensionSettings");
        }

        if (this.dataRetrievalPlan != null)
        {
            this.dataRetrievalPlan.writeAsElement(
                writer,
                "DataRetrievalPlan");
        }

        XMLStreamWriterHelper.writeElement(
            writer,
            "Description",
            this.description);
        XMLStreamWriterHelper.writeElement(
            writer,
            "EventType",
            this.eventType);
        XMLStreamWriterHelper.writeElement(
            writer,
            "MatchData",
            this.matchData);

        if (this.parameters != null)
        {
            /*
             * The element type is an array.
             */
            writer.writeStartElement("Parameters");

            for (int iterator0 = 0; iterator0 < this.parameters.length; iterator0++)
            {
                this.parameters[iterator0].writeAsElement(
                    writer,
                    "ParameterValueOrFieldReference");
            }

            writer.writeEndElement();
        }

        writer.writeEndElement();
    }
}
