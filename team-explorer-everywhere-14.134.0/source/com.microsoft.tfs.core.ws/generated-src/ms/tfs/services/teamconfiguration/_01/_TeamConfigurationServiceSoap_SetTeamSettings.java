// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See License.txt in the repository root.

 /*
 * This file was automatically generated by com.microsoft.tfs.core.ws.generator.Generator
 * from the /complexType.vm template.
 */
package ms.tfs.services.teamconfiguration._01;

import com.microsoft.tfs.core.ws.runtime.*;
import com.microsoft.tfs.core.ws.runtime.serialization.*;
import com.microsoft.tfs.core.ws.runtime.types.*;
import com.microsoft.tfs.core.ws.runtime.util.*;
import com.microsoft.tfs.core.ws.runtime.xml.*;

import ms.tfs.services.teamconfiguration._01._TeamConfigurationServiceSoap_SetTeamSettings;
import ms.tfs.services.teamconfiguration._01._TeamFieldValue;
import ms.tfs.services.teamconfiguration._01._TeamSettings;

import java.lang.String;

import java.util.ArrayList;
import java.util.List;

import javax.xml.stream.XMLStreamConstants;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.XMLStreamWriter;

/**
 * Automatically generated complex type class.
 */
public class _TeamConfigurationServiceSoap_SetTeamSettings
    implements ElementSerializable
{
    // No attributes    

    // Elements
    protected String teamId;
    protected _TeamSettings teamSettings;

    public _TeamConfigurationServiceSoap_SetTeamSettings()
    {
        super();
    }

    public _TeamConfigurationServiceSoap_SetTeamSettings(
        final String teamId,
        final _TeamSettings teamSettings)
    {
        // TODO : Call super() instead of setting all fields directly?
        setTeamId(teamId);
        setTeamSettings(teamSettings);
    }

    public String getTeamId()
    {
        return this.teamId;
    }

    public void setTeamId(String value)
    {
        if (value == null)
        {
            throw new IllegalArgumentException("'teamId' is a required element, its value cannot be null");
        }

        this.teamId = value;
    }

    public _TeamSettings getTeamSettings()
    {
        return this.teamSettings;
    }

    public void setTeamSettings(_TeamSettings value)
    {
        this.teamSettings = value;
    }

    public void writeAsElement(
        final XMLStreamWriter writer,
        final String name)
        throws XMLStreamException
    {
        writer.writeStartElement(name);

        // Elements
        XMLStreamWriterHelper.writeElement(
            writer,
            "teamId",
            this.teamId);

        if (this.teamSettings != null)
        {
            this.teamSettings.writeAsElement(
                writer,
                "teamSettings");
        }

        writer.writeEndElement();
    }
}
