// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See License.txt in the repository root.

 /*
 * This file was automatically generated by com.microsoft.tfs.core.ws.generator.Generator
 * from the /complexType.vm template.
 */
package ms.tfs.build.buildinfo._03;

import com.microsoft.tfs.core.ws.runtime.*;
import com.microsoft.tfs.core.ws.runtime.serialization.*;
import com.microsoft.tfs.core.ws.runtime.types.*;
import com.microsoft.tfs.core.ws.runtime.util.*;
import com.microsoft.tfs.core.ws.runtime.xml.*;

import ms.tfs.build.buildinfo._03._WorkItemData;

import java.lang.String;

import java.util.ArrayList;
import java.util.List;

import javax.xml.stream.XMLStreamConstants;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.XMLStreamWriter;

/**
 * Automatically generated complex type class.
 */
public class _WorkItemData
    implements ElementSerializable, ElementDeserializable
{
    // No attributes    

    // Elements
    protected int workItemId;
    protected String workItemUri;
    protected String title;
    protected String status;
    protected String assignedTo;

    public _WorkItemData()
    {
        super();
    }

    public _WorkItemData(
        final int workItemId,
        final String workItemUri,
        final String title,
        final String status,
        final String assignedTo)
    {
        // TODO : Call super() instead of setting all fields directly?
        setWorkItemId(workItemId);
        setWorkItemUri(workItemUri);
        setTitle(title);
        setStatus(status);
        setAssignedTo(assignedTo);
    }

    public int getWorkItemId()
    {
        return this.workItemId;
    }

    public void setWorkItemId(int value)
    {
        this.workItemId = value;
    }

    public String getWorkItemUri()
    {
        return this.workItemUri;
    }

    public void setWorkItemUri(String value)
    {
        this.workItemUri = value;
    }

    public String getTitle()
    {
        return this.title;
    }

    public void setTitle(String value)
    {
        this.title = value;
    }

    public String getStatus()
    {
        return this.status;
    }

    public void setStatus(String value)
    {
        this.status = value;
    }

    public String getAssignedTo()
    {
        return this.assignedTo;
    }

    public void setAssignedTo(String value)
    {
        this.assignedTo = value;
    }

    public void writeAsElement(
        final XMLStreamWriter writer,
        final String name)
        throws XMLStreamException
    {
        writer.writeStartElement(name);

        // Elements
        XMLStreamWriterHelper.writeElement(
            writer,
            "WorkItemId",
            this.workItemId);
        XMLStreamWriterHelper.writeElement(
            writer,
            "WorkItemUri",
            this.workItemUri);
        XMLStreamWriterHelper.writeElement(
            writer,
            "Title",
            this.title);
        XMLStreamWriterHelper.writeElement(
            writer,
            "Status",
            this.status);
        XMLStreamWriterHelper.writeElement(
            writer,
            "AssignedTo",
            this.assignedTo);

        writer.writeEndElement();
    }

    public void readFromElement(final XMLStreamReader reader)
        throws XMLStreamException
    {
        String localName;

        // This object uses no attributes

        // Elements
        int event;

        do
        {
            event = reader.next();

            if (event == XMLStreamConstants.START_ELEMENT)
            {
                localName = reader.getLocalName();

                if (localName.equalsIgnoreCase("WorkItemId"))
                {
                    this.workItemId = XMLConvert.toInt(reader.getElementText());
                }
                else if (localName.equalsIgnoreCase("WorkItemUri"))
                {
                    this.workItemUri = reader.getElementText();
                }
                else if (localName.equalsIgnoreCase("Title"))
                {
                    this.title = reader.getElementText();
                }
                else if (localName.equalsIgnoreCase("Status"))
                {
                    this.status = reader.getElementText();
                }
                else if (localName.equalsIgnoreCase("AssignedTo"))
                {
                    this.assignedTo = reader.getElementText();
                }
                else
                {
                    // Read the unknown child element until its end
                    XMLStreamReaderHelper.readUntilElementEnd(reader);
                }
            }
        }
        while (event != XMLStreamConstants.END_ELEMENT);
    }
}
