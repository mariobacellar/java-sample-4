// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See License.txt in the repository root.

 /*
 * This file was automatically generated by com.microsoft.tfs.core.ws.generator.Generator
 * from the /complexType.vm template.
 */
package ms.tfs.versioncontrol.clientservices._03;

import com.microsoft.tfs.core.ws.runtime.*;
import com.microsoft.tfs.core.ws.runtime.serialization.*;
import com.microsoft.tfs.core.ws.runtime.types.*;
import com.microsoft.tfs.core.ws.runtime.util.*;
import com.microsoft.tfs.core.ws.runtime.xml.*;

import ms.tfs.versioncontrol.clientservices._03._ChangeType;
import ms.tfs.versioncontrol.clientservices._03._Conflict;
import ms.tfs.versioncontrol.clientservices._03._ConflictType;
import ms.tfs.versioncontrol.clientservices._03._ItemType;
import ms.tfs.versioncontrol.clientservices._03._Resolution;

import java.lang.String;

import java.util.ArrayList;
import java.util.List;

import javax.xml.stream.XMLStreamConstants;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.XMLStreamWriter;

/**
 * Automatically generated complex type class.
 */
public class _Conflict
    implements ElementSerializable, ElementDeserializable
{
    // Attributes
    protected int cid;
    protected int pcid;
    protected _ChangeType ychg;
    protected int ychgEx;
    protected String ysitem;
    protected String ysitemsrc;
    protected int yenc;
    protected int yprop;
    protected _ItemType ytype;
    protected int yver;
    protected int yitemid;
    protected int ydid;
    protected _ChangeType ylchg;
    protected int ylchgEx = 0;
    protected int ylmver;
    protected String bsitem;
    protected int benc;
    protected int bprop;
    protected int bitemid;
    protected int bver;
    protected byte[] bhash;
    protected int bdid;
    protected _ItemType btype;
    protected _ChangeType bchg = new _ChangeType(
                new _ChangeType._ChangeType_Flag[] { _ChangeType._ChangeType_Flag.None });
    protected int bchgEx = 0;
    protected int titemid;
    protected int tver;
    protected String tsitem;
    protected int tenc;
    protected int tprop;
    protected byte[] thash;
    protected int tdid;
    protected _ItemType ttype;
    protected int tlmver;
    protected int tverf;
    protected int tctyp;
    protected boolean isc;
    protected String tsn;
    protected String tson;
    protected String srclitem;
    protected String tgtlitem;
    protected _ConflictType ctype;
    protected int reason;
    protected boolean isnamecflict;
    protected boolean isforced;
    protected _Resolution res = _Resolution.None;
    protected boolean isresolved;
    protected String bdurl;
    protected String tdurl;
    protected String ydurl;
    protected int copt = 0;

    // No elements    
    public _Conflict()
    {
        super();
    }

    public _Conflict(
        final int cid,
        final int pcid,
        final _ChangeType ychg,
        final int ychgEx,
        final String ysitem,
        final String ysitemsrc,
        final int yenc,
        final int yprop,
        final _ItemType ytype,
        final int yver,
        final int yitemid,
        final int ydid,
        final _ChangeType ylchg,
        final int ylchgEx,
        final int ylmver,
        final String bsitem,
        final int benc,
        final int bprop,
        final int bitemid,
        final int bver,
        final byte[] bhash,
        final int bdid,
        final _ItemType btype,
        final _ChangeType bchg,
        final int bchgEx,
        final int titemid,
        final int tver,
        final String tsitem,
        final int tenc,
        final int tprop,
        final byte[] thash,
        final int tdid,
        final _ItemType ttype,
        final int tlmver,
        final int tverf,
        final int tctyp,
        final boolean isc,
        final String tsn,
        final String tson,
        final String srclitem,
        final String tgtlitem,
        final _ConflictType ctype,
        final int reason,
        final boolean isnamecflict,
        final boolean isforced,
        final _Resolution res,
        final boolean isresolved,
        final String bdurl,
        final String tdurl,
        final String ydurl,
        final int copt)
    {
        // TODO : Call super() instead of setting all fields directly?
        setCid(cid);
        setPcid(pcid);
        setYchg(ychg);
        setYchgEx(ychgEx);
        setYsitem(ysitem);
        setYsitemsrc(ysitemsrc);
        setYenc(yenc);
        setYprop(yprop);
        setYtype(ytype);
        setYver(yver);
        setYitemid(yitemid);
        setYdid(ydid);
        setYlchg(ylchg);
        setYlchgEx(ylchgEx);
        setYlmver(ylmver);
        setBsitem(bsitem);
        setBenc(benc);
        setBprop(bprop);
        setBitemid(bitemid);
        setBver(bver);
        setBhash(bhash);
        setBdid(bdid);
        setBtype(btype);
        setBchg(bchg);
        setBchgEx(bchgEx);
        setTitemid(titemid);
        setTver(tver);
        setTsitem(tsitem);
        setTenc(tenc);
        setTprop(tprop);
        setThash(thash);
        setTdid(tdid);
        setTtype(ttype);
        setTlmver(tlmver);
        setTverf(tverf);
        setTctyp(tctyp);
        setIsc(isc);
        setTsn(tsn);
        setTson(tson);
        setSrclitem(srclitem);
        setTgtlitem(tgtlitem);
        setCtype(ctype);
        setReason(reason);
        setIsnamecflict(isnamecflict);
        setIsforced(isforced);
        setRes(res);
        setIsresolved(isresolved);
        setBdurl(bdurl);
        setTdurl(tdurl);
        setYdurl(ydurl);
        setCopt(copt);
    }

    public int getCid()
    {
        return this.cid;
    }

    public void setCid(final int value)
    {
        this.cid = value;
    }

    public int getPcid()
    {
        return this.pcid;
    }

    public void setPcid(final int value)
    {
        this.pcid = value;
    }

    public _ChangeType getYchg()
    {
        return this.ychg;
    }

    public void setYchg(final _ChangeType value)
    {
        if (value == null)
        {
            throw new IllegalArgumentException("'ychg' is a required attribute, its value cannot be null");
        }

        this.ychg = value;
    }

    public int getYchgEx()
    {
        return this.ychgEx;
    }

    public void setYchgEx(final int value)
    {
        this.ychgEx = value;
    }

    public String getYsitem()
    {
        return this.ysitem;
    }

    public void setYsitem(final String value)
    {
        this.ysitem = value;
    }

    public String getYsitemsrc()
    {
        return this.ysitemsrc;
    }

    public void setYsitemsrc(final String value)
    {
        this.ysitemsrc = value;
    }

    public int getYenc()
    {
        return this.yenc;
    }

    public void setYenc(final int value)
    {
        this.yenc = value;
    }

    public int getYprop()
    {
        return this.yprop;
    }

    public void setYprop(final int value)
    {
        this.yprop = value;
    }

    public _ItemType getYtype()
    {
        return this.ytype;
    }

    public void setYtype(final _ItemType value)
    {
        if (value == null)
        {
            throw new IllegalArgumentException("'ytype' is a required attribute, its value cannot be null");
        }

        this.ytype = value;
    }

    public int getYver()
    {
        return this.yver;
    }

    public void setYver(final int value)
    {
        this.yver = value;
    }

    public int getYitemid()
    {
        return this.yitemid;
    }

    public void setYitemid(final int value)
    {
        this.yitemid = value;
    }

    public int getYdid()
    {
        return this.ydid;
    }

    public void setYdid(final int value)
    {
        this.ydid = value;
    }

    public _ChangeType getYlchg()
    {
        return this.ylchg;
    }

    public void setYlchg(final _ChangeType value)
    {
        if (value == null)
        {
            throw new IllegalArgumentException("'ylchg' is a required attribute, its value cannot be null");
        }

        this.ylchg = value;
    }

    public int getYlchgEx()
    {
        return this.ylchgEx;
    }

    public void setYlchgEx(final int value)
    {
        this.ylchgEx = value;
    }

    public int getYlmver()
    {
        return this.ylmver;
    }

    public void setYlmver(final int value)
    {
        this.ylmver = value;
    }

    public String getBsitem()
    {
        return this.bsitem;
    }

    public void setBsitem(final String value)
    {
        this.bsitem = value;
    }

    public int getBenc()
    {
        return this.benc;
    }

    public void setBenc(final int value)
    {
        this.benc = value;
    }

    public int getBprop()
    {
        return this.bprop;
    }

    public void setBprop(final int value)
    {
        this.bprop = value;
    }

    public int getBitemid()
    {
        return this.bitemid;
    }

    public void setBitemid(final int value)
    {
        this.bitemid = value;
    }

    public int getBver()
    {
        return this.bver;
    }

    public void setBver(final int value)
    {
        this.bver = value;
    }

    public byte[] getBhash()
    {
        return this.bhash;
    }

    public void setBhash(final byte[] value)
    {
        this.bhash = value;
    }

    public int getBdid()
    {
        return this.bdid;
    }

    public void setBdid(final int value)
    {
        this.bdid = value;
    }

    public _ItemType getBtype()
    {
        return this.btype;
    }

    public void setBtype(final _ItemType value)
    {
        if (value == null)
        {
            throw new IllegalArgumentException("'btype' is a required attribute, its value cannot be null");
        }

        this.btype = value;
    }

    public _ChangeType getBchg()
    {
        return this.bchg;
    }

    public void setBchg(final _ChangeType value)
    {
        this.bchg = value;
    }

    public int getBchgEx()
    {
        return this.bchgEx;
    }

    public void setBchgEx(final int value)
    {
        this.bchgEx = value;
    }

    public int getTitemid()
    {
        return this.titemid;
    }

    public void setTitemid(final int value)
    {
        this.titemid = value;
    }

    public int getTver()
    {
        return this.tver;
    }

    public void setTver(final int value)
    {
        this.tver = value;
    }

    public String getTsitem()
    {
        return this.tsitem;
    }

    public void setTsitem(final String value)
    {
        this.tsitem = value;
    }

    public int getTenc()
    {
        return this.tenc;
    }

    public void setTenc(final int value)
    {
        this.tenc = value;
    }

    public int getTprop()
    {
        return this.tprop;
    }

    public void setTprop(final int value)
    {
        this.tprop = value;
    }

    public byte[] getThash()
    {
        return this.thash;
    }

    public void setThash(final byte[] value)
    {
        this.thash = value;
    }

    public int getTdid()
    {
        return this.tdid;
    }

    public void setTdid(final int value)
    {
        this.tdid = value;
    }

    public _ItemType getTtype()
    {
        return this.ttype;
    }

    public void setTtype(final _ItemType value)
    {
        if (value == null)
        {
            throw new IllegalArgumentException("'ttype' is a required attribute, its value cannot be null");
        }

        this.ttype = value;
    }

    public int getTlmver()
    {
        return this.tlmver;
    }

    public void setTlmver(final int value)
    {
        this.tlmver = value;
    }

    public int getTverf()
    {
        return this.tverf;
    }

    public void setTverf(final int value)
    {
        this.tverf = value;
    }

    public int getTctyp()
    {
        return this.tctyp;
    }

    public void setTctyp(final int value)
    {
        this.tctyp = value;
    }

    public boolean isIsc()
    {
        return this.isc;
    }

    public void setIsc(final boolean value)
    {
        this.isc = value;
    }

    public String getTsn()
    {
        return this.tsn;
    }

    public void setTsn(final String value)
    {
        this.tsn = value;
    }

    public String getTson()
    {
        return this.tson;
    }

    public void setTson(final String value)
    {
        this.tson = value;
    }

    public String getSrclitem()
    {
        return this.srclitem;
    }

    public void setSrclitem(final String value)
    {
        this.srclitem = value;
    }

    public String getTgtlitem()
    {
        return this.tgtlitem;
    }

    public void setTgtlitem(final String value)
    {
        this.tgtlitem = value;
    }

    public _ConflictType getCtype()
    {
        return this.ctype;
    }

    public void setCtype(final _ConflictType value)
    {
        if (value == null)
        {
            throw new IllegalArgumentException("'ctype' is a required attribute, its value cannot be null");
        }

        this.ctype = value;
    }

    public int getReason()
    {
        return this.reason;
    }

    public void setReason(final int value)
    {
        this.reason = value;
    }

    public boolean isIsnamecflict()
    {
        return this.isnamecflict;
    }

    public void setIsnamecflict(final boolean value)
    {
        this.isnamecflict = value;
    }

    public boolean isIsforced()
    {
        return this.isforced;
    }

    public void setIsforced(final boolean value)
    {
        this.isforced = value;
    }

    public _Resolution getRes()
    {
        return this.res;
    }

    public void setRes(final _Resolution value)
    {
        this.res = value;
    }

    public boolean isIsresolved()
    {
        return this.isresolved;
    }

    public void setIsresolved(final boolean value)
    {
        this.isresolved = value;
    }

    public String getBdurl()
    {
        return this.bdurl;
    }

    public void setBdurl(final String value)
    {
        this.bdurl = value;
    }

    public String getTdurl()
    {
        return this.tdurl;
    }

    public void setTdurl(final String value)
    {
        this.tdurl = value;
    }

    public String getYdurl()
    {
        return this.ydurl;
    }

    public void setYdurl(final String value)
    {
        this.ydurl = value;
    }

    public int getCopt()
    {
        return this.copt;
    }

    public void setCopt(final int value)
    {
        this.copt = value;
    }

    public void writeAsElement(
        final XMLStreamWriter writer,
        final String name)
        throws XMLStreamException
    {
        writer.writeStartElement(name);

        // Attributes
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "cid",
            this.cid);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "pcid",
            this.pcid);
        this.ychg.writeAsAttribute(
            writer,
            "ychg");
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "ychgEx",
            this.ychgEx);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "ysitem",
            this.ysitem);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "ysitemsrc",
            this.ysitemsrc);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "yenc",
            this.yenc);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "yprop",
            this.yprop);
        this.ytype.writeAsAttribute(
            writer,
            "ytype");
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "yver",
            this.yver);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "yitemid",
            this.yitemid);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "ydid",
            this.ydid);
        this.ylchg.writeAsAttribute(
            writer,
            "ylchg");
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "ylchgEx",
            this.ylchgEx);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "ylmver",
            this.ylmver);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "bsitem",
            this.bsitem);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "benc",
            this.benc);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "bprop",
            this.bprop);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "bitemid",
            this.bitemid);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "bver",
            this.bver);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "bhash",
            this.bhash);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "bdid",
            this.bdid);
        this.btype.writeAsAttribute(
            writer,
            "btype");

        if (this.bchg != null)
        {
            this.bchg.writeAsAttribute(
                writer,
                "bchg");
        }

        XMLStreamWriterHelper.writeAttribute(
            writer,
            "bchgEx",
            this.bchgEx);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "titemid",
            this.titemid);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "tver",
            this.tver);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "tsitem",
            this.tsitem);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "tenc",
            this.tenc);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "tprop",
            this.tprop);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "thash",
            this.thash);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "tdid",
            this.tdid);
        this.ttype.writeAsAttribute(
            writer,
            "ttype");
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "tlmver",
            this.tlmver);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "tverf",
            this.tverf);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "tctyp",
            this.tctyp);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "isc",
            this.isc);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "tsn",
            this.tsn);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "tson",
            this.tson);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "srclitem",
            this.srclitem);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "tgtlitem",
            this.tgtlitem);
        this.ctype.writeAsAttribute(
            writer,
            "ctype");
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "reason",
            this.reason);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "isnamecflict",
            this.isnamecflict);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "isforced",
            this.isforced);

        if (this.res != null)
        {
            this.res.writeAsAttribute(
                writer,
                "res");
        }

        XMLStreamWriterHelper.writeAttribute(
            writer,
            "isresolved",
            this.isresolved);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "bdurl",
            this.bdurl);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "tdurl",
            this.tdurl);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "ydurl",
            this.ydurl);
        XMLStreamWriterHelper.writeAttribute(
            writer,
            "copt",
            this.copt);

        writer.writeEndElement();
    }

    public void readFromElement(final XMLStreamReader reader)
        throws XMLStreamException
    {
        String localName;

        // Attributes
        final int attributeCount = reader.getAttributeCount();
        String attributeValue;

        for (int i = 0; i < attributeCount; i++)
        {
            localName = reader.getAttributeLocalName(i);
            attributeValue = reader.getAttributeValue(i);

            if (localName.equalsIgnoreCase("cid"))
            {
                this.cid = XMLConvert.toInt(attributeValue);
            }
            else if (localName.equalsIgnoreCase("pcid"))
            {
                this.pcid = XMLConvert.toInt(attributeValue);
            }
            else if (localName.equalsIgnoreCase("ychg"))
            {
                this.ychg = new _ChangeType();
                this.ychg.readFromAttribute(attributeValue);
            }
            else if (localName.equalsIgnoreCase("ychgEx"))
            {
                this.ychgEx = XMLConvert.toInt(attributeValue);
            }
            else if (localName.equalsIgnoreCase("ysitem"))
            {
                this.ysitem = attributeValue;
            }
            else if (localName.equalsIgnoreCase("ysitemsrc"))
            {
                this.ysitemsrc = attributeValue;
            }
            else if (localName.equalsIgnoreCase("yenc"))
            {
                this.yenc = XMLConvert.toInt(attributeValue);
            }
            else if (localName.equalsIgnoreCase("yprop"))
            {
                this.yprop = XMLConvert.toInt(attributeValue);
            }
            else if (localName.equalsIgnoreCase("ytype"))
            {
                this.ytype = _ItemType.fromString(attributeValue);
            }
            else if (localName.equalsIgnoreCase("yver"))
            {
                this.yver = XMLConvert.toInt(attributeValue);
            }
            else if (localName.equalsIgnoreCase("yitemid"))
            {
                this.yitemid = XMLConvert.toInt(attributeValue);
            }
            else if (localName.equalsIgnoreCase("ydid"))
            {
                this.ydid = XMLConvert.toInt(attributeValue);
            }
            else if (localName.equalsIgnoreCase("ylchg"))
            {
                this.ylchg = new _ChangeType();
                this.ylchg.readFromAttribute(attributeValue);
            }
            else if (localName.equalsIgnoreCase("ylchgEx"))
            {
                this.ylchgEx = XMLConvert.toInt(attributeValue);
            }
            else if (localName.equalsIgnoreCase("ylmver"))
            {
                this.ylmver = XMLConvert.toInt(attributeValue);
            }
            else if (localName.equalsIgnoreCase("bsitem"))
            {
                this.bsitem = attributeValue;
            }
            else if (localName.equalsIgnoreCase("benc"))
            {
                this.benc = XMLConvert.toInt(attributeValue);
            }
            else if (localName.equalsIgnoreCase("bprop"))
            {
                this.bprop = XMLConvert.toInt(attributeValue);
            }
            else if (localName.equalsIgnoreCase("bitemid"))
            {
                this.bitemid = XMLConvert.toInt(attributeValue);
            }
            else if (localName.equalsIgnoreCase("bver"))
            {
                this.bver = XMLConvert.toInt(attributeValue);
            }
            else if (localName.equalsIgnoreCase("bhash"))
            {
                this.bhash = XMLConvert.toByteArray(attributeValue);
            }
            else if (localName.equalsIgnoreCase("bdid"))
            {
                this.bdid = XMLConvert.toInt(attributeValue);
            }
            else if (localName.equalsIgnoreCase("btype"))
            {
                this.btype = _ItemType.fromString(attributeValue);
            }
            else if (localName.equalsIgnoreCase("bchg"))
            {
                this.bchg = new _ChangeType();
                this.bchg.readFromAttribute(attributeValue);
            }
            else if (localName.equalsIgnoreCase("bchgEx"))
            {
                this.bchgEx = XMLConvert.toInt(attributeValue);
            }
            else if (localName.equalsIgnoreCase("titemid"))
            {
                this.titemid = XMLConvert.toInt(attributeValue);
            }
            else if (localName.equalsIgnoreCase("tver"))
            {
                this.tver = XMLConvert.toInt(attributeValue);
            }
            else if (localName.equalsIgnoreCase("tsitem"))
            {
                this.tsitem = attributeValue;
            }
            else if (localName.equalsIgnoreCase("tenc"))
            {
                this.tenc = XMLConvert.toInt(attributeValue);
            }
            else if (localName.equalsIgnoreCase("tprop"))
            {
                this.tprop = XMLConvert.toInt(attributeValue);
            }
            else if (localName.equalsIgnoreCase("thash"))
            {
                this.thash = XMLConvert.toByteArray(attributeValue);
            }
            else if (localName.equalsIgnoreCase("tdid"))
            {
                this.tdid = XMLConvert.toInt(attributeValue);
            }
            else if (localName.equalsIgnoreCase("ttype"))
            {
                this.ttype = _ItemType.fromString(attributeValue);
            }
            else if (localName.equalsIgnoreCase("tlmver"))
            {
                this.tlmver = XMLConvert.toInt(attributeValue);
            }
            else if (localName.equalsIgnoreCase("tverf"))
            {
                this.tverf = XMLConvert.toInt(attributeValue);
            }
            else if (localName.equalsIgnoreCase("tctyp"))
            {
                this.tctyp = XMLConvert.toInt(attributeValue);
            }
            else if (localName.equalsIgnoreCase("isc"))
            {
                this.isc = XMLConvert.toBoolean(attributeValue);
            }
            else if (localName.equalsIgnoreCase("tsn"))
            {
                this.tsn = attributeValue;
            }
            else if (localName.equalsIgnoreCase("tson"))
            {
                this.tson = attributeValue;
            }
            else if (localName.equalsIgnoreCase("srclitem"))
            {
                this.srclitem = attributeValue;
            }
            else if (localName.equalsIgnoreCase("tgtlitem"))
            {
                this.tgtlitem = attributeValue;
            }
            else if (localName.equalsIgnoreCase("ctype"))
            {
                this.ctype = _ConflictType.fromString(attributeValue);
            }
            else if (localName.equalsIgnoreCase("reason"))
            {
                this.reason = XMLConvert.toInt(attributeValue);
            }
            else if (localName.equalsIgnoreCase("isnamecflict"))
            {
                this.isnamecflict = XMLConvert.toBoolean(attributeValue);
            }
            else if (localName.equalsIgnoreCase("isforced"))
            {
                this.isforced = XMLConvert.toBoolean(attributeValue);
            }
            else if (localName.equalsIgnoreCase("res"))
            {
                this.res = _Resolution.fromString(attributeValue);
            }
            else if (localName.equalsIgnoreCase("isresolved"))
            {
                this.isresolved = XMLConvert.toBoolean(attributeValue);
            }
            else if (localName.equalsIgnoreCase("bdurl"))
            {
                this.bdurl = attributeValue;
            }
            else if (localName.equalsIgnoreCase("tdurl"))
            {
                this.tdurl = attributeValue;
            }
            else if (localName.equalsIgnoreCase("ydurl"))
            {
                this.ydurl = attributeValue;
            }
            else if (localName.equalsIgnoreCase("copt"))
            {
                this.copt = XMLConvert.toInt(attributeValue);
            }

            // Ignore unknown attributes.
        }

        // This object uses no elements, so read until our element end
        XMLStreamReaderHelper.readUntilElementEnd(reader);
    }
}
