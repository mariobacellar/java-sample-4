// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See License.txt in the repository root.

 /*
 * This file was automatically generated by com.microsoft.tfs.core.ws.generator.Generator
 * from the /serviceInterface.vm template.
 */
package ms.ws;

import com.microsoft.tfs.core.ws.runtime.exceptions.*;
import com.microsoft.tfs.core.ws.runtime.types.*;

import ms.ws._AccessControlEntryDetails;
import ms.ws._AccessControlListDetails;
import ms.ws._AceExtendedInformation;
import ms.ws._ActionDefinition;
import ms.ws._IdentityDescriptor;
import ms.ws._SecurityNamespaceDescription;
import ms.ws._SecurityWebServiceSoap_CreateSecurityNamespace;
import ms.ws._SecurityWebServiceSoap_CreateSecurityNamespaceResponse;
import ms.ws._SecurityWebServiceSoap_DeleteSecurityNamespace;
import ms.ws._SecurityWebServiceSoap_DeleteSecurityNamespaceResponse;
import ms.ws._SecurityWebServiceSoap_HasPermissionByDescriptorList;
import ms.ws._SecurityWebServiceSoap_HasPermissionByDescriptorListResponse;
import ms.ws._SecurityWebServiceSoap_HasPermissionByPermissionsList;
import ms.ws._SecurityWebServiceSoap_HasPermissionByPermissionsListResponse;
import ms.ws._SecurityWebServiceSoap_HasPermissionByTokenList;
import ms.ws._SecurityWebServiceSoap_HasPermissionByTokenListResponse;
import ms.ws._SecurityWebServiceSoap_HasWritePermission;
import ms.ws._SecurityWebServiceSoap_HasWritePermissionResponse;
import ms.ws._SecurityWebServiceSoap_QueryPermissions;
import ms.ws._SecurityWebServiceSoap_QueryPermissionsResponse;
import ms.ws._SecurityWebServiceSoap_QuerySecurityNamespaces;
import ms.ws._SecurityWebServiceSoap_QuerySecurityNamespacesResponse;
import ms.ws._SecurityWebServiceSoap_RemoveAccessControlEntries;
import ms.ws._SecurityWebServiceSoap_RemoveAccessControlEntriesResponse;
import ms.ws._SecurityWebServiceSoap_RemoveAccessControlList;
import ms.ws._SecurityWebServiceSoap_RemoveAccessControlListResponse;
import ms.ws._SecurityWebServiceSoap_RemovePermissions;
import ms.ws._SecurityWebServiceSoap_RemovePermissionsResponse;
import ms.ws._SecurityWebServiceSoap_SetAccessControlList;
import ms.ws._SecurityWebServiceSoap_SetAccessControlListResponse;
import ms.ws._SecurityWebServiceSoap_SetInheritFlag;
import ms.ws._SecurityWebServiceSoap_SetInheritFlagResponse;
import ms.ws._SecurityWebServiceSoap_SetPermissions;
import ms.ws._SecurityWebServiceSoap_SetPermissionsResponse;

import java.lang.String;

/**
 * Automatically generated service interface.
 *
 * {http://microsoft.com/webservices/}SecurityWebServiceSoap
 */
public interface _SecurityWebServiceSoap
{
    public void createSecurityNamespace(final _SecurityNamespaceDescription description)
        throws TransportException, SOAPFault;

    public void deleteSecurityNamespace(final String namespaceId)
        throws TransportException, SOAPFault;

    public _SecurityNamespaceDescription[] querySecurityNamespaces(final String namespaceId)
        throws TransportException, SOAPFault;

    public boolean removeAccessControlList(
        final String namespaceId,
        final String[] tokens,
        final boolean recurse)
        throws TransportException, SOAPFault;

    public boolean removeAccessControlEntries(
        final String namespaceId,
        final String token,
        final _IdentityDescriptor[] identities)
        throws TransportException, SOAPFault;

    public _AccessControlEntryDetails[] setPermissions(
        final String namespaceId,
        final String token,
        final _AccessControlEntryDetails[] accessControlEntries,
        final boolean merge)
        throws TransportException, SOAPFault;

    public void setAccessControlList(
        final String namespaceId,
        final _AccessControlListDetails[] accessControlLists)
        throws TransportException, SOAPFault;

    public _AccessControlListDetails[] queryPermissions(
        final String namespaceId,
        final String token,
        final _IdentityDescriptor[] identities,
        final boolean includeExtendedInfo,
        final boolean recurse)
        throws TransportException, SOAPFault;

    public void setInheritFlag(
        final String namespaceId,
        final String token,
        final boolean inherits)
        throws TransportException, SOAPFault;

    public _AccessControlEntryDetails removePermissions(
        final String namespaceId,
        final String token,
        final _IdentityDescriptor descriptor,
        final int permissions)
        throws TransportException, SOAPFault;

    public boolean[] hasPermissionByTokenList(
        final String namespaceId,
        final String[] tokens,
        final _IdentityDescriptor descriptor,
        final int requestedPermissions,
        final boolean alwaysAllowAdministrators)
        throws TransportException, SOAPFault;

    public boolean[] hasPermissionByDescriptorList(
        final String namespaceId,
        final String token,
        final _IdentityDescriptor[] descriptors,
        final int requestedPermissions,
        final boolean alwaysAllowAdministrators)
        throws TransportException, SOAPFault;

    public boolean[] hasPermissionByPermissionsList(
        final String namespaceId,
        final String token,
        final _IdentityDescriptor descriptor,
        final int[] requestedPermissions,
        final boolean alwaysAllowAdministrators)
        throws TransportException, SOAPFault;

    public boolean[] hasWritePermission(
        final String namespaceId,
        final String token,
        final int[] requestedPermissions)
        throws TransportException, SOAPFault;
}
