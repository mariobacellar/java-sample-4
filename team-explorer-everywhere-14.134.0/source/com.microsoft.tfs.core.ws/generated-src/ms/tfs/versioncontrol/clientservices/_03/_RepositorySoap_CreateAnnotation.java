// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See License.txt in the repository root.

 /*
 * This file was automatically generated by com.microsoft.tfs.core.ws.generator.Generator
 * from the /complexType.vm template.
 */
package ms.tfs.versioncontrol.clientservices._03;

import com.microsoft.tfs.core.ws.runtime.*;
import com.microsoft.tfs.core.ws.runtime.serialization.*;
import com.microsoft.tfs.core.ws.runtime.types.*;
import com.microsoft.tfs.core.ws.runtime.util.*;
import com.microsoft.tfs.core.ws.runtime.xml.*;

import ms.tfs.versioncontrol.clientservices._03._RepositorySoap_CreateAnnotation;

import java.lang.String;

import java.util.ArrayList;
import java.util.List;

import javax.xml.stream.XMLStreamConstants;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.XMLStreamWriter;

/**
 * Automatically generated complex type class.
 */
public class _RepositorySoap_CreateAnnotation
    implements ElementSerializable
{
    // No attributes    

    // Elements
    protected String annotationName;
    protected String annotatedItem;
    protected int version;
    protected String annotationValue;
    protected String comment;
    protected boolean overwrite;

    public _RepositorySoap_CreateAnnotation()
    {
        super();
    }

    public _RepositorySoap_CreateAnnotation(
        final String annotationName,
        final String annotatedItem,
        final int version,
        final String annotationValue,
        final String comment,
        final boolean overwrite)
    {
        // TODO : Call super() instead of setting all fields directly?
        setAnnotationName(annotationName);
        setAnnotatedItem(annotatedItem);
        setVersion(version);
        setAnnotationValue(annotationValue);
        setComment(comment);
        setOverwrite(overwrite);
    }

    public String getAnnotationName()
    {
        return this.annotationName;
    }

    public void setAnnotationName(String value)
    {
        this.annotationName = value;
    }

    public String getAnnotatedItem()
    {
        return this.annotatedItem;
    }

    public void setAnnotatedItem(String value)
    {
        this.annotatedItem = value;
    }

    public int getVersion()
    {
        return this.version;
    }

    public void setVersion(int value)
    {
        this.version = value;
    }

    public String getAnnotationValue()
    {
        return this.annotationValue;
    }

    public void setAnnotationValue(String value)
    {
        this.annotationValue = value;
    }

    public String getComment()
    {
        return this.comment;
    }

    public void setComment(String value)
    {
        this.comment = value;
    }

    public boolean isOverwrite()
    {
        return this.overwrite;
    }

    public void setOverwrite(boolean value)
    {
        this.overwrite = value;
    }

    public void writeAsElement(
        final XMLStreamWriter writer,
        final String name)
        throws XMLStreamException
    {
        writer.writeStartElement(name);

        // Elements
        XMLStreamWriterHelper.writeElement(
            writer,
            "AnnotationName",
            this.annotationName);
        XMLStreamWriterHelper.writeElement(
            writer,
            "AnnotatedItem",
            this.annotatedItem);
        XMLStreamWriterHelper.writeElement(
            writer,
            "Version",
            this.version);
        XMLStreamWriterHelper.writeElement(
            writer,
            "AnnotationValue",
            this.annotationValue);
        XMLStreamWriterHelper.writeElement(
            writer,
            "Comment",
            this.comment);
        XMLStreamWriterHelper.writeElement(
            writer,
            "Overwrite",
            this.overwrite);

        writer.writeEndElement();
    }
}
