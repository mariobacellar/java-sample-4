// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See License.txt in the repository root.

 /*
 * This file was automatically generated by com.microsoft.tfs.core.ws.generator.Generator
 * from the /serviceImplementation.vm template.
 */
package ms.tfs.build.buildservice._03;

import com.microsoft.tfs.core.httpclient.HttpClient;
import com.microsoft.tfs.core.ws.runtime.client.*;
import com.microsoft.tfs.core.ws.runtime.exceptions.*;
import com.microsoft.tfs.core.ws.runtime.serialization.*;
import com.microsoft.tfs.core.ws.runtime.types.*;

import ms.tfs.build.buildservice._03._AdministrationWebServiceSoap_AddBuildAgents;
import ms.tfs.build.buildservice._03._AdministrationWebServiceSoap_AddBuildAgentsResponse;
import ms.tfs.build.buildservice._03._AdministrationWebServiceSoap_AddBuildControllers;
import ms.tfs.build.buildservice._03._AdministrationWebServiceSoap_AddBuildControllersResponse;
import ms.tfs.build.buildservice._03._AdministrationWebServiceSoap_AddBuildServiceHost;
import ms.tfs.build.buildservice._03._AdministrationWebServiceSoap_AddBuildServiceHostResponse;
import ms.tfs.build.buildservice._03._AdministrationWebServiceSoap_DeleteBuildAgents;
import ms.tfs.build.buildservice._03._AdministrationWebServiceSoap_DeleteBuildAgentsResponse;
import ms.tfs.build.buildservice._03._AdministrationWebServiceSoap_DeleteBuildControllers;
import ms.tfs.build.buildservice._03._AdministrationWebServiceSoap_DeleteBuildControllersResponse;
import ms.tfs.build.buildservice._03._AdministrationWebServiceSoap_DeleteBuildServiceHost;
import ms.tfs.build.buildservice._03._AdministrationWebServiceSoap_DeleteBuildServiceHostResponse;
import ms.tfs.build.buildservice._03._AdministrationWebServiceSoap_QueryBuildAgents;
import ms.tfs.build.buildservice._03._AdministrationWebServiceSoap_QueryBuildAgentsByUri;
import ms.tfs.build.buildservice._03._AdministrationWebServiceSoap_QueryBuildAgentsByUriResponse;
import ms.tfs.build.buildservice._03._AdministrationWebServiceSoap_QueryBuildAgentsResponse;
import ms.tfs.build.buildservice._03._AdministrationWebServiceSoap_QueryBuildControllers;
import ms.tfs.build.buildservice._03._AdministrationWebServiceSoap_QueryBuildControllersByUri;
import ms.tfs.build.buildservice._03._AdministrationWebServiceSoap_QueryBuildControllersByUriResponse;
import ms.tfs.build.buildservice._03._AdministrationWebServiceSoap_QueryBuildControllersResponse;
import ms.tfs.build.buildservice._03._AdministrationWebServiceSoap_QueryBuildServiceHosts;
import ms.tfs.build.buildservice._03._AdministrationWebServiceSoap_QueryBuildServiceHostsByUri;
import ms.tfs.build.buildservice._03._AdministrationWebServiceSoap_QueryBuildServiceHostsByUriResponse;
import ms.tfs.build.buildservice._03._AdministrationWebServiceSoap_QueryBuildServiceHostsResponse;
import ms.tfs.build.buildservice._03._AdministrationWebServiceSoap_TestBuildAgentConnection;
import ms.tfs.build.buildservice._03._AdministrationWebServiceSoap_TestBuildAgentConnectionResponse;
import ms.tfs.build.buildservice._03._AdministrationWebServiceSoap_TestBuildControllerConnection;
import ms.tfs.build.buildservice._03._AdministrationWebServiceSoap_TestBuildControllerConnectionResponse;
import ms.tfs.build.buildservice._03._AdministrationWebServiceSoap_TestBuildServiceHostConnections;
import ms.tfs.build.buildservice._03._AdministrationWebServiceSoap_TestBuildServiceHostConnectionsResponse;
import ms.tfs.build.buildservice._03._AdministrationWebServiceSoap_UpdateBuildAgents;
import ms.tfs.build.buildservice._03._AdministrationWebServiceSoap_UpdateBuildAgentsResponse;
import ms.tfs.build.buildservice._03._AdministrationWebServiceSoap_UpdateBuildControllers;
import ms.tfs.build.buildservice._03._AdministrationWebServiceSoap_UpdateBuildControllersResponse;
import ms.tfs.build.buildservice._03._AdministrationWebServiceSoap_UpdateBuildServiceHost;
import ms.tfs.build.buildservice._03._AdministrationWebServiceSoap_UpdateBuildServiceHostResponse;
import ms.tfs.build.buildservice._03._AgentStatus;
import ms.tfs.build.buildservice._03._BuildAgent;
import ms.tfs.build.buildservice._03._BuildAgentQueryResult;
import ms.tfs.build.buildservice._03._BuildAgentSpec;
import ms.tfs.build.buildservice._03._BuildAgentUpdate;
import ms.tfs.build.buildservice._03._BuildAgentUpdateOptions;
import ms.tfs.build.buildservice._03._BuildController;
import ms.tfs.build.buildservice._03._BuildControllerQueryResult;
import ms.tfs.build.buildservice._03._BuildControllerSpec;
import ms.tfs.build.buildservice._03._BuildControllerUpdate;
import ms.tfs.build.buildservice._03._BuildControllerUpdateOptions;
import ms.tfs.build.buildservice._03._BuildServiceHost;
import ms.tfs.build.buildservice._03._BuildServiceHostQueryResult;
import ms.tfs.build.buildservice._03._BuildServiceHostUpdate;
import ms.tfs.build.buildservice._03._BuildServiceHostUpdateOptions;
import ms.tfs.build.buildservice._03._ControllerStatus;
import ms.tfs.build.buildservice._03._Failure;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

import java.lang.String;

import java.net.URI;

import java.util.Calendar;

import javax.xml.namespace.QName;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.XMLStreamWriter;

/**
 * Automatically generated service interface.
 *
 * {http://tempuri.org/}AdministrationWebServiceSoap12Service
 */
public class _AdministrationWebServiceSoap12Service
    extends SOAP12Service
    implements _AdministrationWebServiceSoap
{
    private static final QName PORT_QNAME = new QName("http://tempuri.org/", "AdministrationWebServiceSoap12Service");
    private static final String ENDPOINT_PATH = "/tfs/DefaultCollection/Build/v3.0/AdministrationService.asmx";

    public _AdministrationWebServiceSoap12Service(
        final URI endpoint,
        final QName port)
    {
        super(endpoint, port);
    }

    public _AdministrationWebServiceSoap12Service(
        final HttpClient client,
        URI endpoint,
        QName port)
    {
        super(client, endpoint, port);
    }

    /**
     * @return the qualified name of the WSDL port this service implementation can be used with
     */
    public static QName getPortQName()
    {
        return _AdministrationWebServiceSoap12Service.PORT_QNAME;
    }

    /**
     * @return the path part to use when constructing a URI to contact a host that provides this service
     */
    public static String getEndpointPath()
    {
        return _AdministrationWebServiceSoap12Service.ENDPOINT_PATH;
    }

    public _BuildAgent[] addBuildAgents(final _BuildAgent[] agents)
        throws TransportException, SOAPFault
    {
        final _AdministrationWebServiceSoap_AddBuildAgents requestData = new _AdministrationWebServiceSoap_AddBuildAgents(
                    agents);

        final SOAPRequest request = createSOAPRequest(
                "AddBuildAgents",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "AddBuildAgents");
                    }
                });

        final _AdministrationWebServiceSoap_AddBuildAgentsResponse responseData = new _AdministrationWebServiceSoap_AddBuildAgentsResponse();

        executeSOAPRequest(
            request,
            "AddBuildAgentsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getAddBuildAgentsResult();
    }

    public void deleteBuildAgents(final String[] agentUris)
        throws TransportException, SOAPFault
    {
        final _AdministrationWebServiceSoap_DeleteBuildAgents requestData = new _AdministrationWebServiceSoap_DeleteBuildAgents(
                    agentUris);

        final SOAPRequest request = createSOAPRequest(
                "DeleteBuildAgents",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "DeleteBuildAgents");
                    }
                });

        final _AdministrationWebServiceSoap_DeleteBuildAgentsResponse responseData = new _AdministrationWebServiceSoap_DeleteBuildAgentsResponse();

        executeSOAPRequest(
            request,
            "DeleteBuildAgentsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }

    public _BuildAgentQueryResult[] queryBuildAgents(final _BuildAgentSpec[] agentSpecs)
        throws TransportException, SOAPFault
    {
        final _AdministrationWebServiceSoap_QueryBuildAgents requestData = new _AdministrationWebServiceSoap_QueryBuildAgents(
                    agentSpecs);

        final SOAPRequest request = createSOAPRequest(
                "QueryBuildAgents",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "QueryBuildAgents");
                    }
                });

        final _AdministrationWebServiceSoap_QueryBuildAgentsResponse responseData = new _AdministrationWebServiceSoap_QueryBuildAgentsResponse();

        executeSOAPRequest(
            request,
            "QueryBuildAgentsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getQueryBuildAgentsResult();
    }

    public _BuildAgentQueryResult queryBuildAgentsByUri(final String[] agentUris)
        throws TransportException, SOAPFault
    {
        final _AdministrationWebServiceSoap_QueryBuildAgentsByUri requestData = new _AdministrationWebServiceSoap_QueryBuildAgentsByUri(
                    agentUris);

        final SOAPRequest request = createSOAPRequest(
                "QueryBuildAgentsByUri",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "QueryBuildAgentsByUri");
                    }
                });

        final _AdministrationWebServiceSoap_QueryBuildAgentsByUriResponse responseData = new _AdministrationWebServiceSoap_QueryBuildAgentsByUriResponse();

        executeSOAPRequest(
            request,
            "QueryBuildAgentsByUriResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getQueryBuildAgentsByUriResult();
    }

    public void updateBuildAgents(final _BuildAgentUpdateOptions[] updates)
        throws TransportException, SOAPFault
    {
        final _AdministrationWebServiceSoap_UpdateBuildAgents requestData = new _AdministrationWebServiceSoap_UpdateBuildAgents(
                    updates);

        final SOAPRequest request = createSOAPRequest(
                "UpdateBuildAgents",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "UpdateBuildAgents");
                    }
                });

        final _AdministrationWebServiceSoap_UpdateBuildAgentsResponse responseData = new _AdministrationWebServiceSoap_UpdateBuildAgentsResponse();

        executeSOAPRequest(
            request,
            "UpdateBuildAgentsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }

    public _BuildAgentQueryResult testBuildAgentConnection(final String agentUri)
        throws TransportException, SOAPFault
    {
        final _AdministrationWebServiceSoap_TestBuildAgentConnection requestData = new _AdministrationWebServiceSoap_TestBuildAgentConnection(
                    agentUri);

        final SOAPRequest request = createSOAPRequest(
                "TestBuildAgentConnection",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "TestBuildAgentConnection");
                    }
                });

        final _AdministrationWebServiceSoap_TestBuildAgentConnectionResponse responseData = new _AdministrationWebServiceSoap_TestBuildAgentConnectionResponse();

        executeSOAPRequest(
            request,
            "TestBuildAgentConnectionResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getTestBuildAgentConnectionResult();
    }

    public _BuildController[] addBuildControllers(final _BuildController[] controllers)
        throws TransportException, SOAPFault
    {
        final _AdministrationWebServiceSoap_AddBuildControllers requestData = new _AdministrationWebServiceSoap_AddBuildControllers(
                    controllers);

        final SOAPRequest request = createSOAPRequest(
                "AddBuildControllers",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "AddBuildControllers");
                    }
                });

        final _AdministrationWebServiceSoap_AddBuildControllersResponse responseData = new _AdministrationWebServiceSoap_AddBuildControllersResponse();

        executeSOAPRequest(
            request,
            "AddBuildControllersResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getAddBuildControllersResult();
    }

    public void deleteBuildControllers(final String[] controllerUris)
        throws TransportException, SOAPFault
    {
        final _AdministrationWebServiceSoap_DeleteBuildControllers requestData = new _AdministrationWebServiceSoap_DeleteBuildControllers(
                    controllerUris);

        final SOAPRequest request = createSOAPRequest(
                "DeleteBuildControllers",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "DeleteBuildControllers");
                    }
                });

        final _AdministrationWebServiceSoap_DeleteBuildControllersResponse responseData = new _AdministrationWebServiceSoap_DeleteBuildControllersResponse();

        executeSOAPRequest(
            request,
            "DeleteBuildControllersResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }

    public _BuildControllerQueryResult[] queryBuildControllers(final _BuildControllerSpec[] controllerSpecs)
        throws TransportException, SOAPFault
    {
        final _AdministrationWebServiceSoap_QueryBuildControllers requestData = new _AdministrationWebServiceSoap_QueryBuildControllers(
                    controllerSpecs);

        final SOAPRequest request = createSOAPRequest(
                "QueryBuildControllers",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "QueryBuildControllers");
                    }
                });

        final _AdministrationWebServiceSoap_QueryBuildControllersResponse responseData = new _AdministrationWebServiceSoap_QueryBuildControllersResponse();

        executeSOAPRequest(
            request,
            "QueryBuildControllersResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getQueryBuildControllersResult();
    }

    public _BuildControllerQueryResult queryBuildControllersByUri(
        final String[] controllerUris,
        final boolean includeAgents)
        throws TransportException, SOAPFault
    {
        final _AdministrationWebServiceSoap_QueryBuildControllersByUri requestData = new _AdministrationWebServiceSoap_QueryBuildControllersByUri(
                    controllerUris,
                    includeAgents);

        final SOAPRequest request = createSOAPRequest(
                "QueryBuildControllersByUri",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "QueryBuildControllersByUri");
                    }
                });

        final _AdministrationWebServiceSoap_QueryBuildControllersByUriResponse responseData = new _AdministrationWebServiceSoap_QueryBuildControllersByUriResponse();

        executeSOAPRequest(
            request,
            "QueryBuildControllersByUriResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getQueryBuildControllersByUriResult();
    }

    public void updateBuildControllers(final _BuildControllerUpdateOptions[] updates)
        throws TransportException, SOAPFault
    {
        final _AdministrationWebServiceSoap_UpdateBuildControllers requestData = new _AdministrationWebServiceSoap_UpdateBuildControllers(
                    updates);

        final SOAPRequest request = createSOAPRequest(
                "UpdateBuildControllers",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "UpdateBuildControllers");
                    }
                });

        final _AdministrationWebServiceSoap_UpdateBuildControllersResponse responseData = new _AdministrationWebServiceSoap_UpdateBuildControllersResponse();

        executeSOAPRequest(
            request,
            "UpdateBuildControllersResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }

    public _BuildControllerQueryResult testBuildControllerConnection(final String controllerUri)
        throws TransportException, SOAPFault
    {
        final _AdministrationWebServiceSoap_TestBuildControllerConnection requestData = new _AdministrationWebServiceSoap_TestBuildControllerConnection(
                    controllerUri);

        final SOAPRequest request = createSOAPRequest(
                "TestBuildControllerConnection",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "TestBuildControllerConnection");
                    }
                });

        final _AdministrationWebServiceSoap_TestBuildControllerConnectionResponse responseData = new _AdministrationWebServiceSoap_TestBuildControllerConnectionResponse();

        executeSOAPRequest(
            request,
            "TestBuildControllerConnectionResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getTestBuildControllerConnectionResult();
    }

    public _BuildServiceHost addBuildServiceHost(final _BuildServiceHost serviceHost)
        throws TransportException, SOAPFault
    {
        final _AdministrationWebServiceSoap_AddBuildServiceHost requestData = new _AdministrationWebServiceSoap_AddBuildServiceHost(
                    serviceHost);

        final SOAPRequest request = createSOAPRequest(
                "AddBuildServiceHost",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "AddBuildServiceHost");
                    }
                });

        final _AdministrationWebServiceSoap_AddBuildServiceHostResponse responseData = new _AdministrationWebServiceSoap_AddBuildServiceHostResponse();

        executeSOAPRequest(
            request,
            "AddBuildServiceHostResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getAddBuildServiceHostResult();
    }

    public void deleteBuildServiceHost(final String serviceHostUri)
        throws TransportException, SOAPFault
    {
        final _AdministrationWebServiceSoap_DeleteBuildServiceHost requestData = new _AdministrationWebServiceSoap_DeleteBuildServiceHost(
                    serviceHostUri);

        final SOAPRequest request = createSOAPRequest(
                "DeleteBuildServiceHost",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "DeleteBuildServiceHost");
                    }
                });

        final _AdministrationWebServiceSoap_DeleteBuildServiceHostResponse responseData = new _AdministrationWebServiceSoap_DeleteBuildServiceHostResponse();

        executeSOAPRequest(
            request,
            "DeleteBuildServiceHostResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }

    public _BuildServiceHostQueryResult queryBuildServiceHosts(final String computer)
        throws TransportException, SOAPFault
    {
        final _AdministrationWebServiceSoap_QueryBuildServiceHosts requestData = new _AdministrationWebServiceSoap_QueryBuildServiceHosts(
                    computer);

        final SOAPRequest request = createSOAPRequest(
                "QueryBuildServiceHosts",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "QueryBuildServiceHosts");
                    }
                });

        final _AdministrationWebServiceSoap_QueryBuildServiceHostsResponse responseData = new _AdministrationWebServiceSoap_QueryBuildServiceHostsResponse();

        executeSOAPRequest(
            request,
            "QueryBuildServiceHostsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getQueryBuildServiceHostsResult();
    }

    public _BuildServiceHostQueryResult queryBuildServiceHostsByUri(final String[] serviceHostUris)
        throws TransportException, SOAPFault
    {
        final _AdministrationWebServiceSoap_QueryBuildServiceHostsByUri requestData = new _AdministrationWebServiceSoap_QueryBuildServiceHostsByUri(
                    serviceHostUris);

        final SOAPRequest request = createSOAPRequest(
                "QueryBuildServiceHostsByUri",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "QueryBuildServiceHostsByUri");
                    }
                });

        final _AdministrationWebServiceSoap_QueryBuildServiceHostsByUriResponse responseData = new _AdministrationWebServiceSoap_QueryBuildServiceHostsByUriResponse();

        executeSOAPRequest(
            request,
            "QueryBuildServiceHostsByUriResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getQueryBuildServiceHostsByUriResult();
    }

    public void updateBuildServiceHost(final _BuildServiceHostUpdateOptions update)
        throws TransportException, SOAPFault
    {
        final _AdministrationWebServiceSoap_UpdateBuildServiceHost requestData = new _AdministrationWebServiceSoap_UpdateBuildServiceHost(
                    update);

        final SOAPRequest request = createSOAPRequest(
                "UpdateBuildServiceHost",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "UpdateBuildServiceHost");
                    }
                });

        final _AdministrationWebServiceSoap_UpdateBuildServiceHostResponse responseData = new _AdministrationWebServiceSoap_UpdateBuildServiceHostResponse();

        executeSOAPRequest(
            request,
            "UpdateBuildServiceHostResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });
    }

    public _BuildServiceHostQueryResult testBuildServiceHostConnections(final String hostUri)
        throws TransportException, SOAPFault
    {
        final _AdministrationWebServiceSoap_TestBuildServiceHostConnections requestData = new _AdministrationWebServiceSoap_TestBuildServiceHostConnections(
                    hostUri);

        final SOAPRequest request = createSOAPRequest(
                "TestBuildServiceHostConnections",
                new SOAPMethodRequestWriter()
                {
                    public void writeSOAPRequest(
                        final XMLStreamWriter writer,
                        final OutputStream out)
                        throws XMLStreamException, IOException
                    {
                        requestData.writeAsElement(
                            writer,
                            "TestBuildServiceHostConnections");
                    }
                });

        final _AdministrationWebServiceSoap_TestBuildServiceHostConnectionsResponse responseData = new _AdministrationWebServiceSoap_TestBuildServiceHostConnectionsResponse();

        executeSOAPRequest(
            request,
            "TestBuildServiceHostConnectionsResponse",
            new SOAPMethodResponseReader()
            {
                public void readSOAPResponse(
                    final XMLStreamReader reader,
                    final InputStream in)
                    throws XMLStreamException, IOException
                {
                    responseData.readFromElement(reader);
                }
            });

        return responseData.getTestBuildServiceHostConnectionsResult();
    }
}
